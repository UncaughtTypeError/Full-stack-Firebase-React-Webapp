{"version":3,"sources":["serviceWorker.js","components/presentational/Loading.js","config/googleOAuth.js","redux/actions/actions.js","redux/actions/actionTypes.js","components/containers/LoginGoogle.js","config/firebase/context.js","config/firebase/config.js","config/firebase/index.js","components/containers/withFirebase.js","components/presentational/UserGreeting.js","components/presentational/Error.js","utils/compileUserArray.js","utils/hooks/useFirebaseDataApi.js","components/containers/UserProps.js","components/presentational/Header.js","components/presentational/Body.js","components/presentational/Footer.js","components/presentational/FieldSet.js","components/presentational/InputTextField.js","components/presentational/InputRadio.js","components/presentational/InputCheckbox.js","components/presentational/Users.js","utils/userObjectConstructor.js","utils/writeUserData.js","utils/validateFields.js","components/containers/AddDevice.js","utils/escapeRegExp.js","components/containers/SearchFilter.js","components/containers/UserListHeader.js","components/presentational/ListItemProfile.js","components/presentational/DeviceTableRow.js","components/presentational/DevicesTable.js","components/containers/UserListItem.js","components/containers/UsersList.js","components/presentational/SnackbarAlert.js","components/containers/AppDashboard.js","components/containers/AppLogin.js","components/containers/App.js","redux/reducers/reducer_userLogin.js","redux/reducers/reducer_profileObject.js","redux/reducers/reducer_devicesObject.js","redux/reducers/reducer_alertObject.js","redux/reducers/reducer_dataDisplayObject.js","redux/reducers/reducer_searchFilterResults.js","redux/reducers/reducer_utils.js","redux/reducers/index.js","redux/store.js","index.js","assets/Web-SEO-Online-Logo-white-transparent.png"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","useStyles","makeStyles","theme","root","marginRight","spacing","circularProgress","Loading","props","size","color","display","text","classes","className","CircularProgress","Typography","CLIENT_ID","userAdditionalProps","dispatch","type","payload","alertProps","dataDisplayProps","LoginGoogle","loggedIn","useSelector","userLogin","useDispatch","Fragment","clientId","buttonText","icon","onLogoutSuccess","render","renderProps","Button","variant","onClick","disabled","onRequest","response","googleLoginSuccess","onFailure","googleLoginFailure","cookiePolicy","FirebaseContext","React","createContext","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","database","Firebase","withFirebase","WrappedComponent","Consumer","data","firebase","listItem","top","bottom","breakpoints","down","flexDirection","avatar","up","marginLeft","width","height","margin","menuIcon","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","PrimaryContent","name","SecondaryContent","laptopsNum","monitorsNum","isUser","UserProfile","isBreakpoint","useMediaQuery","imageUrl","role","typographyProps","align","component","secondaryContentProps","ListItem","data-role","ListItemText","primary","secondary","primaryTypographyProps","secondaryTypographyProps","ListItemAvatar","Avatar","alt","src","UserGreeting","useTheme","useState","isOpen","setOpen","handleDrawerClose","event","key","IconButton","aria-label","edge","clsx","Drawer","anchor","open","onClose","paper","direction","Divider","Error","compileUserArray","snapshot","userId","dbItems","val","userObject","laptopsObject","monitorsObject","userArray","Object","entries","value","push","map","index","googleId","profile","email","givenName","familyName","devices","laptops","monitors","devicesNum","id","makeModel","serialNo","takenHome","screenSize","some","user","unshift","splice","useFirebaseDataApi","firebaseObj","state_userId","profileObject","fetchingData","boolean","handleLoading","fetchFirebaseUsers","userData","setUserData","isError","setIsError","isLoading","setIsLoading","useEffect","didCancel","a","db","ref","on","length","state_loggedIn","state_user","state_devices","devicesObject","setDevicesProps","userDevicesProps","setAdditionalProps","setIsUser","userProps","setUserProps","setDevicesNum","userExists","dataEdit","boxWrapper","flexWrap","boxLogo","flex","logo","toTop","position","right","zIndex","toolbarAnchor","minHeight","typography","fontWeight","ScrollTop","children","trigger","useScrollTrigger","disableHysteresis","threshold","Zoom","in","target","ownerDocument","document","querySelector","scrollIntoView","behavior","block","HideOnScroll","Slide","appear","Header","AppBar","Toolbar","Box","flexGrow","Logo","boxUser","Fab","Body","Container","maxWidth","appBar","Footer","gutterBottom","Date","getFullYear","FieldSet","legend","FormControl","fullWidth","FormLabel","InputTextField","TextField","placeholder","onChange","onBlur","undefined","label","required","inputProps","dataKey","dataDeviceID","dataFieldID","defaultValue","InputRadio","FormControlLabel","control","Radio","checked","labelPlacement","htmlFor","InputCheckbox","Checkbox","profileDetails","marginBottom","palette","action","verticalAlign","badge","fontSize","minWidth","Users","selectedUser","dense","button","Badge","badgeContent","ListItemSecondaryAction","tabIndex","disableRipple","userObjectConstructor","writeUserData","dbRef","setUserObject","existingData","once","set","info","validateFields","validationData","invalidField","hasOwnProperty","card","cardContent","paddingBottom","cardActions","marginTop","buttonGroup","borderRadius","border","fieldSet","paddingTop","borderTop","paddingRight","fieldWrap","state_profileObject","state_googleId","state_role","setAlertProps","deviceData","setDeviceData","deviceType","setDeviceType","setValidationData","addDevice","setAddDevice","isDisabled","setIsDisabled","employeeAssignment","setEmployeeAssignment","setUserId","onDeviceSelection","e","onEdit","fieldId","editData","fieldValidationData","invalidity","Card","elevation","CardContent","RadioGroup","row","defaultChecked","dataset","fieldid","checkValue","List","list","CardActions","ButtonGroup","child","exists","alert","severity","message","onAdd","escapeRegExp","str","replace","search","transition","searchIcon","SearchFilter","setSearchFilterResults","results","setSearchFilterTerm","term","storeSearchFilter","isClear","setIsClear","searchField","useRef","onKeyUp","matchArray","regex","RegExp","filter","onSearchFilter","inputRef","InputProps","startAdornment","InputAdornment","endAdornment","current","chip","transform","background","state_displayTypeSummary","dataDisplayObject","displayTypeSummary","displayType","setDisplayType","setDataDisplayProps","deviceCount","Switch","Chip","mark","main","UserName","state_searchTerm","searchFilterResults","searchTerm","parts","split","part","i","test","roles","viewerRole","userRole","href","ListItemProfile","tableRow","textAlign","tableRowFlex","tableEmptyColumn","tableActionColumn","device","user_googleId","user_edit","isBreakpoint_960","isBreakpoint_750","inputChecked","setInputChecked","deviceId","TableRow","TableCell","deviceid","updateData","update","remove","onRemove","table","tableContainer","tableHeaderWrap","tableHeaderWrapFlex","tableHeader","backgroundColor","selected","tableLeadColumn","tableDataColumn","DevicesTable","TableContainer","Paper","Table","TableHead","colSpan","TableBody","laptop","monitor","listHeader","userEdit","setUserEdit","onUserEdit","style","state_filteredResults","resultsObject","users","setUsers","anchorOriginBottomLeft","Alert","SnackbarAlert","state_alertProps","alertObject","setIsOpen","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","AppDashboard","AddDevice","UsersList","gridContainer","backgroundSize","AppLogin","Grid","container","justify","item","xs","sm","md","lg","xl","CardMedia","image","title","App","prefersDarkMode","useMemo","createMuiTheme","ThemeProvider","CssBaseline","initialUserLoginState","initialProfileObjectState","profileObjectConstructor","profileObj","initialDevicesObjectState","initialAlertObjectState","initialDisplayObjectState","initialSearchFilterState","initialLoadingState","combineReducers","userPropsObject","displayObject","persistConfig","blacklist","storage","stateReconciler","autoMergeLevel2","persistedReducer","persistReducer","rootReducer","store","createStore","applyMiddleware","thunkMiddleware","persistor","persistStore","rootElement","getElementById","ReactDOM","loading","Provider","URL","process","origin","addEventListener","fetch","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.43e4b2c0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\n// Theme\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    circularProgress: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst Loading = (props) => {\r\n\r\n    const { size, color, display, text = true } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CircularProgress className={classes.circularProgress} size={size} color={color} />\r\n            {text && (\r\n                <Typography display={display}>Loading...</Typography>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Loading;","export const CLIENT_ID = '403030532426-pum0j9hlgmdst7au6p18pu2na0vih6j8.apps.googleusercontent.com';","import { \r\n    LOG_IN_PENDING, \r\n    LOG_IN_FAILURE, \r\n    LOG_IN_SUCCESS, \r\n    LOG_OUT_SUCCESS,\r\n    SET_USER_PROPS,\r\n    SET_DEVICE_PROPS,\r\n    HANDLE_LOADING,\r\n    HANDLE_FEEDBACK,\r\n    HANDLE_DISPLAY,\r\n    HANDLE_SEARCH_FILTER,\r\n    STORE_SEARCH_FILTER\r\n} from './actionTypes';\r\n\r\n// User Login & Profile Object\r\nexport const googleLoginRequest = () => dispatch => {\r\n    console.log('ACTION: Login Request');\r\n    dispatch({ type: LOG_IN_PENDING });\r\n}\r\n\r\nexport const googleLoginSuccess = (response) => dispatch => {\r\n    console.log('ACTION: Login Success',{response});\r\n    dispatch({ type: LOG_IN_SUCCESS, payload: response });\r\n}\r\n\r\nexport const googleLoginFailure = (error) => dispatch => {\r\n    console.log('ACTION: Login Error',{error});\r\n    dispatch({ type: LOG_IN_FAILURE, payload: error });\r\n}\r\n\r\nexport const googleLogoutSuccess = () => dispatch => {\r\n    console.log('ACTION: Logout Success');\r\n    dispatch({ type: LOG_OUT_SUCCESS });\r\n}\r\n\r\nexport const userAdditionalProps = (props) => dispatch => {\r\n    console.log('ACTION: User Props',{props});\r\n    dispatch({ type: SET_USER_PROPS, payload: props });\r\n}\r\n\r\n// Devices Object\r\nexport const userDevicesProps = (props) => dispatch => {\r\n    console.log('ACTION: Device Props',{props});\r\n    dispatch({ type: SET_DEVICE_PROPS, payload: props });\r\n}\r\n\r\n// Utils\r\nexport const handleLoading = (boolean) => dispatch => {\r\n    console.log('ACTION: Handling Loading...');\r\n    dispatch({ type: HANDLE_LOADING, payload: boolean });\r\n}\r\n\r\n// Alert Feedback\r\nexport const alertProps = (props) => dispatch => {\r\n    console.log('ACTION: Alert',{props});\r\n    dispatch({ type: HANDLE_FEEDBACK, payload: props });\r\n}\r\n\r\n// Data Display\r\nexport const dataDisplayProps = (props) => dispatch => {\r\n    console.log('ACTION: Data Display Props',{props});\r\n    dispatch({ type: HANDLE_DISPLAY, payload: props });\r\n}\r\n\r\n// Search Filter Results\r\nexport const handleSearchFilter = (results) => dispatch => {\r\n    console.log('ACTION: Search Filter Results',{results});\r\n    dispatch({ type: HANDLE_SEARCH_FILTER, payload: results });\r\n}\r\n\r\nexport const storeSearchFilter = (term) => dispatch => {\r\n    console.log('ACTION: Search Filter Term',{term});\r\n    dispatch({ type: STORE_SEARCH_FILTER, payload: term });\r\n}","// User Login\r\nexport const LOG_IN_PENDING     = 'LOG_IN_PENDING';\r\nexport const LOG_IN_FAILURE     = 'LOG_IN_FAILURE';\r\nexport const LOG_IN_SUCCESS     = 'LOG_IN_SUCCESS';\r\nexport const LOG_OUT_SUCCESS    = 'LOG_OUT_SUCCESS';\r\n\r\n// Profile Object\r\nexport const SET_USER_PROPS = 'SET_USER_PROPS';\r\n\r\n// Devices Object\r\nexport const SET_DEVICE_PROPS = 'SET_DEVICE_PROPS';\r\n\r\n// Utils\r\nexport const HANDLE_LOADING = 'HANDLE_LOADING';\r\n\r\n// Alert Feedback\r\nexport const HANDLE_FEEDBACK = 'HANDLE_FEEDBACK';\r\n\r\n// Data Display\r\nexport const HANDLE_DISPLAY = 'HANDLE_DISPLAY';\r\n\r\n// Search Filter Results\r\nexport const HANDLE_SEARCH_FILTER = 'HANDLE_SEARCH_FILTER';\r\nexport const STORE_SEARCH_FILTER = 'STORE_SEARCH_FILTER';","import React from 'react';\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\n// Config\r\nimport { CLIENT_ID } from '../../config/googleOAuth';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// Actions\r\nimport { \r\n    googleLoginRequest,\r\n    googleLoginSuccess,\r\n    googleLoginFailure,\r\n    googleLogoutSuccess\r\n} from '../../redux/actions/actions';\r\n// Theme\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst LoginGoogle = () => {\r\n    \r\n    const   loggedIn        = useSelector(state => state.userLogin.loggedIn),\r\n            dispatch        = useDispatch(),\r\n            loginRequest    = () => dispatch(googleLoginRequest()),\r\n            loginSuccess    = (response) => dispatch(googleLoginSuccess(response)),\r\n            loginFailure    = (error) => dispatch(googleLoginFailure(error)),\r\n            logoutSuccess   = () => dispatch(googleLogoutSuccess());\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {loggedIn ? (\r\n                <GoogleLogout\r\n                    clientId={CLIENT_ID}\r\n                    buttonText=\"Logout\"\r\n                    icon={true}\r\n                    onLogoutSuccess={logoutSuccess}\r\n                    render={(renderProps) => (\r\n                        <Button \r\n                            variant=\"contained\" \r\n                            onClick={renderProps.onClick} \r\n                            disabled={renderProps.disabled}\r\n                        >\r\n                            Logout\r\n                        </Button>\r\n                    )}\r\n                />\r\n            ) : (\r\n                <GoogleLogin\r\n                    clientId={CLIENT_ID}\r\n                    buttonText=\"Login\"\r\n                    icon={true}\r\n                    onRequest={loginRequest}\r\n                    onSuccess={loginSuccess}\r\n                    onFailure={loginFailure}\r\n                    cookiePolicy={'single_host_origin'}\r\n                    render={(renderProps) => (\r\n                        <Button \r\n                            variant=\"outlined\" \r\n                            onClick={renderProps.onClick} \r\n                            disabled={renderProps.disabled}\r\n                        >\r\n                            Login with Google\r\n                        </Button>\r\n                    )}\r\n                />\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default LoginGoogle;","import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport default FirebaseContext;","//import * as firebase from 'firebase';\r\nimport app from 'firebase/app';\r\nimport 'firebase/analytics';\r\nimport 'firebase/database';\r\n\r\n// Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBlInHgZgYGowodJxxUU02QP-dMUnrqNjo\",\r\n    authDomain: \"web-seo-online-devices.firebaseapp.com\",\r\n    databaseURL: \"https://web-seo-online-devices.firebaseio.com\",\r\n    projectId: \"web-seo-online-devices\",\r\n    storageBucket: \"web-seo-online-devices.appspot.com\",\r\n    messagingSenderId: \"467336907858\",\r\n    appId: \"1:467336907858:web:5f9bc21cbcf86b0b0de38b\",\r\n    measurementId: \"G-ZD4J2YP1XE\"\r\n};\r\n// Initialize Firebase\r\napp.initializeApp(firebaseConfig);\r\napp.analytics();\r\napp.database();\r\n\r\nconst Firebase = app;\r\n\r\nexport default Firebase;","import FirebaseContext from './context';\r\nimport Firebase from './config';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext };","import React from 'react';\r\n// Firebase\r\nimport { FirebaseContext } from '../../config/firebase/';\r\n\r\nconst withFirebase = (WrappedComponent) => (props) => {\r\n\r\n    return (\r\n        <FirebaseContext.Consumer>\r\n            {data => {\r\n                return (\r\n                        <WrappedComponent firebase={data} {...props} />\r\n                    );\r\n            }}\r\n        </FirebaseContext.Consumer>\r\n    )\r\n\r\n}\r\n\r\nexport default withFirebase;","import React, { useState } from 'react';\r\n// Theme\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n// Responsiveness\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    listItem: {\r\n        top: 'auto',\r\n        bottom: 0,\r\n        [theme.breakpoints.down('sm')]: { // max-width: 960px\r\n            flexDirection: 'column-reverse',\r\n        },\r\n    },\r\n    avatar: {\r\n        [theme.breakpoints.up('md')]: { // min-width: 960px\r\n            marginLeft: 10,\r\n        },\r\n        [theme.breakpoints.down('sm')]: { // max-width: 960px\r\n            width: 80,\r\n            height: 'auto',\r\n            margin: `${theme.spacing(1)}px auto`,\r\n        },\r\n    },\r\n    menuIcon: {\r\n        marginRight: 10,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n}));\r\n\r\nconst PrimaryContent = (props) => {\r\n\r\n    const { name } = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            Welcome {name}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst SecondaryContent = (props) => {\r\n\r\n    const { laptopsNum, monitorsNum, isUser } = props;\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            { isUser && (laptopsNum  > 0 || monitorsNum > 0) ? (\r\n                <small>You have <strong>{laptopsNum} Laptop/s</strong> and <strong>{monitorsNum} Monitor/s</strong> assigned to your account.</small>\r\n            ) : (\r\n                <small>You have no devices assigned to your account.</small>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst UserProfile = (props) => {\r\n\r\n    const   isBreakpoint = useMediaQuery('(min-width:960px)'),\r\n            classes = useStyles();\r\n\r\n    const   { imageUrl, name, role, laptopsNum, monitorsNum, isUser } = props,\r\n            typographyProps = { color: 'inherit', align: isBreakpoint ? 'right' : 'center', component: 'div' },\r\n            secondaryContentProps = { laptopsNum, monitorsNum, isUser };\r\n\r\n    return (\r\n        <ListItem data-role={role} className={classes.listItem} component=\"div\">\r\n            <ListItemText \r\n                primary={<PrimaryContent name={name} />} \r\n                secondary={<SecondaryContent {...secondaryContentProps} />} \r\n                primaryTypographyProps={typographyProps}\r\n                secondaryTypographyProps={typographyProps}\r\n            />\r\n            <ListItemAvatar>\r\n                <Avatar alt={name} src={imageUrl} className={classes.avatar} />\r\n            </ListItemAvatar>\r\n        </ListItem>\r\n    );\r\n\r\n}\r\n\r\nconst UserGreeting = (props) => {\r\n\r\n    const   isBreakpoint = useMediaQuery('(min-width:960px)'),\r\n            theme = useTheme(),\r\n            classes = useStyles();\r\n\r\n    const [isOpen, setOpen] = useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = (event) => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {isBreakpoint ? (\r\n                <UserProfile {...props} />\r\n            ) : (\r\n                <React.Fragment>\r\n                    <div className={classes.drawerHeader} />\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        edge=\"end\"\r\n                        onClick={handleDrawerOpen}\r\n                        className={clsx(classes.menuIcon, isOpen && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Drawer\r\n                            className={classes.drawer}\r\n                            variant=\"temporary\"\r\n                            anchor=\"right\"\r\n                            open={isOpen}\r\n                            onClose={handleDrawerClose}\r\n                            classes={{\r\n                                paper: classes.drawerPaper,\r\n                            }}\r\n                    >\r\n                        <div className={classes.drawerHeader}>\r\n                            <IconButton onClick={handleDrawerClose}>\r\n                                {theme.direction === 'rtl' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                            </IconButton>\r\n                        </div>\r\n                        <Divider />\r\n                        <UserProfile {...props} />\r\n                    </Drawer>\r\n                </React.Fragment>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n\r\n}\r\n\r\nexport default UserGreeting;","import React from 'react';\r\n\r\nconst Error = () => {\r\n\r\n    return (\r\n        <div>Something went wrong...</div>\r\n    );\r\n\r\n}\r\n\r\nexport default Error;","const compileUserArray = (props) => {\r\n\r\n    let { snapshot, userId = null } = props,\r\n        dbItems = snapshot.val();\r\n\r\n    let userObject = [],\r\n        laptopsObject = {},\r\n        monitorsObject = {},\r\n        devicesNumObject = {},\r\n\r\n        userArray = [],\r\n        laptopsArray = [],\r\n        monitorsArray = [];\r\n\r\n    for(let [key, value] of Object.entries(dbItems)) {\r\n        userObject.push(value);\r\n    }\r\n\r\n    userObject.map((key, index) => {\r\n\r\n        userArray.push({\r\n            googleId: key.googleId,\r\n            role: key.role,\r\n            profile: {\r\n                imageUrl:   key.profile.imageUrl,\r\n                email:      key.profile.email,\r\n                name:       key.profile.name,\r\n                givenName:  key.profile.givenName,\r\n                familyName: key.profile.familyName\r\n            },\r\n            devices: {\r\n                laptops: [],\r\n                monitors: []\r\n            },\r\n            devicesNum: {\r\n                laptopsNum: 0,\r\n                monitorsNum: 0\r\n            }\r\n        });\r\n\r\n        if(key.devices) {\r\n\r\n            laptopsObject = key.devices.laptops || {};\r\n            for(let [key] of Object.entries(laptopsObject)) {\r\n                laptopsArray = userArray[index].devices.laptops;\r\n                laptopsArray.push({\r\n                    id:         key,\r\n                    makeModel:  laptopsObject[key].makeModel,\r\n                    serialNo:   laptopsObject[key].serialNo,\r\n                    takenHome:  laptopsObject[key].takenHome\r\n                });\r\n                userArray[index].devicesNum.laptopsNum++\r\n            }\r\n\r\n            monitorsObject = key.devices.monitors || {};\r\n            for(let [key] of Object.entries(monitorsObject)) {\r\n                monitorsArray = userArray[index].devices.monitors;\r\n                monitorsArray.push({\r\n                    id:         key,\r\n                    makeModel:  monitorsObject[key].makeModel,\r\n                    serialNo:   monitorsObject[key].serialNo,\r\n                    screenSize: monitorsObject[key].screenSize\r\n                });\r\n                userArray[index].devicesNum.monitorsNum++\r\n            }\r\n\r\n        }\r\n\r\n    });\r\n    if(userId) {\r\n        userArray.some((user,index) => { // move current user profile to first index of array\r\n            user.googleId === userId && userArray.unshift(userArray.splice(index, 1)[0]);\r\n        });\r\n    }\r\n\r\n    return userArray;\r\n\r\n};\r\n\r\nexport default compileUserArray;","import { useState, useEffect } from 'react';\r\n// Utils\r\nimport compileUserArray from '../compileUserArray';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// Actions\r\nimport { handleLoading } from '../../redux/actions/actions';\r\n\r\nconst useFirebaseDataApi = (firebaseObj) => {\r\n\r\n    const   state_profileObject = useSelector(state => state.profileObject),\r\n            state_userId        = state_profileObject.googleId,\r\n            dispatch            = useDispatch(),\r\n            fetchingData        = (boolean) => dispatch(handleLoading(boolean));\r\n\r\n    const   [firebase, fetchFirebaseUsers] = useState(firebaseObj),\r\n            [userData, setUserData] = useState([]),\r\n            [isError, setIsError] = useState(false),\r\n            [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        let didCancel = false;\r\n\r\n        (async function fetchUserData() {\r\n\r\n            try {\r\n                const   db = await firebase.database(),\r\n                        data = db.ref('users');\r\n\r\n                if(!didCancel) {\r\n                    data.on('value', (snapshot) => {\r\n                        if(snapshot) {\r\n                            setUserData( compileUserArray({ snapshot, userId: state_userId }) );\r\n                        }\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                if(!didCancel) {\r\n                    setIsError(true);\r\n                    console.error(error);\r\n                }\r\n            }\r\n\r\n        })();\r\n\r\n        return () => {\r\n            didCancel = true;\r\n        };\r\n    }, [firebase]);\r\n\r\n    useEffect(() => {\r\n        \r\n        if (userData.length) {\r\n            fetchingData(false);\r\n            setIsLoading(false);\r\n        } else {\r\n            fetchingData(true);\r\n            setIsLoading(true);\r\n        }\r\n\r\n    }, [userData]);\r\n\r\n    return [{ userData, isError, isLoading }, fetchFirebaseUsers];\r\n\r\n}\r\n\r\nexport default useFirebaseDataApi;","import React, { useState, useEffect } from 'react';\r\n// Components\r\nimport withFirebase from './withFirebase';\r\nimport UserGreeting from '../presentational/UserGreeting';\r\nimport Loading from '../presentational/Loading';\r\nimport Error from '../presentational/Error';\r\n// Utils\r\nimport useFirebaseDataApi from '../../utils/hooks/useFirebaseDataApi';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// Actions\r\nimport { userAdditionalProps, userDevicesProps } from '../../redux/actions/actions';\r\n\r\nconst UserProps = (props) => {\r\n\r\n    const   { firebase } = props;\r\n\r\n    const   [{ userData, isError, isLoading }, fetchFirebaseUsers] = useFirebaseDataApi(firebase);\r\n    \r\n    const   state_loggedIn      = useSelector(state => state.userLogin.loggedIn),\r\n            state_user          = useSelector(state => state.profileObject),\r\n            state_devices       = useSelector(state => state.devicesObject),\r\n            dispatch            = useDispatch(),\r\n            setDevicesProps     = (props) => dispatch(userDevicesProps(props)),\r\n            setAdditionalProps  = (props) => dispatch(userAdditionalProps(props));\r\n\r\n    const   [isUser, setIsUser]         = useState(false),\r\n            [userProps, setUserProps]   = useState({}),\r\n            [devicesNum, setDevicesNum] = useState({});\r\n\r\n    useEffect(() => {\r\n\r\n        fetchFirebaseUsers(firebase);\r\n\r\n    },[firebase, isLoading]);\r\n\r\n    useEffect(() => {\r\n\r\n        userData.some(user => {\r\n            if(state_user.googleId === user.googleId) {\r\n                setUserProps({ \r\n                    role: user.role, \r\n                    userExists: true,\r\n                    dataEdit: state_user.dataEdit ? true : false,\r\n                });\r\n                setIsUser(true);\r\n                setDevicesNum({ \r\n                    laptopsNum: user.devicesNum.laptopsNum, \r\n                    monitorsNum: user.devicesNum.monitorsNum \r\n                });\r\n            } else {\r\n                setUserProps({ \r\n                    userExists: false, \r\n                });\r\n                setAdditionalProps(userProps);\r\n                setIsUser(false);\r\n            }\r\n            return state_user.googleId === user.googleId;\r\n        });\r\n\r\n    }, [userData]);\r\n\r\n    useEffect(() => {\r\n\r\n        if(isUser) {\r\n            setAdditionalProps(userProps);\r\n            setDevicesProps(devicesNum);\r\n        }\r\n\r\n    },[userProps, devicesNum]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                isLoading ? (\r\n                    <Loading size={20} color=\"inherit\" display=\"inline\" />\r\n                    ) : state_loggedIn && (\r\n                        isError ? (\r\n                            <Error />\r\n                        ) : (\r\n                            isUser ? (\r\n                                <UserGreeting \r\n                                    imageUrl={state_user.imageUrl} \r\n                                    name={state_user.name} \r\n                                    role={state_user.role}\r\n                                    laptopsNum={state_devices.laptopsNum}\r\n                                    monitorsNum={state_devices.monitorsNum}\r\n                                    isUser={isUser}\r\n                                />\r\n                            ) : (\r\n                                <UserGreeting \r\n                                    imageUrl={state_user.imageUrl} \r\n                                    name={state_user.name} \r\n                                    isUser={isUser}\r\n                                />\r\n                            )\r\n                        )\r\n                    )\r\n            }\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default withFirebase(UserProps);","import React from 'react';\r\n// Assets\r\nimport Logo from '../../assets/Web-SEO-Online-Logo-white-transparent.png'\r\n// Components\r\nimport LoginGoogle from '../containers/LoginGoogle';\r\nimport UserProps from '../containers/UserProps';\r\n// Theme\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    boxWrapper: {\r\n        width: '100%',\r\n        [theme.breakpoints.down(400)]: { // max-width: 350px\r\n            justifyContent: 'space-between',\r\n            flexWrap: 'nowrap',\r\n        },\r\n    },\r\n    boxLogo: {\r\n        [theme.breakpoints.down('xs')]: { // max-width: 600px\r\n            justifyContent: 'space-between',\r\n            '& > .MuiTypography-root': {\r\n                display: 'none',\r\n            },\r\n        },\r\n        [theme.breakpoints.down(350)]: { // max-width: 350px\r\n            flex: '0 0 30%',\r\n            '& > img': {\r\n                width: '100%',\r\n                height: 'auto',\r\n            },\r\n        },\r\n    },\r\n    logo: {\r\n        width: 'auto',\r\n        height: 50,\r\n        marginRight: 10,\r\n    },\r\n    toTop: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n        zIndex: 9999,\r\n    },\r\n    toolbarAnchor: {\r\n        minHeight: 75,\r\n    },\r\n    typography: {\r\n        fontWeight: 300,\r\n    }\r\n}));\r\n\r\nconst ScrollTop = (props) => {\r\n\r\n    const { children } = props;\r\n    const classes = useStyles();\r\n    const trigger = useScrollTrigger({\r\n        disableHysteresis: true,\r\n        threshold: 100,\r\n    });\r\n\r\n    const handleClick = event => {\r\n        const anchor = (event.target.ownerDocument || document).querySelector('#back-to-top-anchor');\r\n\r\n        if (anchor) {\r\n            anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Zoom in={trigger}>\r\n            <div onClick={handleClick} role=\"presentation\" className={classes.toTop}>\r\n                {children}\r\n            </div>\r\n        </Zoom>\r\n    );\r\n}\r\n\r\nScrollTop.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n};\r\n\r\nconst HideOnScroll = (props) => {\r\n\r\n    const { children } = props;\r\n    const trigger = useScrollTrigger();\r\n\r\n    return (\r\n        <Slide appear={false} direction=\"down\" in={!trigger}>\r\n            {children}\r\n        </Slide>\r\n    );\r\n}\r\n\r\nHideOnScroll.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n};\r\n\r\nconst Header = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <HideOnScroll {...props}>\r\n                <AppBar color=\"primary\">\r\n                    <Toolbar>\r\n                        <Box display=\"flex\" flexWrap=\"wrap\" alignItems=\"center\" className={classes.boxWrapper}>\r\n                            <Box display=\"flex\" alignItems=\"center\" flexGrow={1} className={classes.boxLogo}>\r\n                                <img \r\n                                    src={Logo}\r\n                                    alt=\"WebSEO Online Devices\"\r\n                                    className={classes.logo} \r\n                                />\r\n                                <Typography className={classes.typography} variant=\"h6\">WebSEO Online Devices</Typography>\r\n                            </Box>\r\n                            <Box display=\"flex\" alignItems=\"center\" className={classes.boxUser}>\r\n                                <UserProps />\r\n                                <LoginGoogle/>\r\n                            </Box>\r\n                        </Box>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </HideOnScroll>\r\n            <Toolbar id=\"back-to-top-anchor\" className={classes.toolbarAnchor} />\r\n            <ScrollTop {...props}>\r\n                <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\r\n                    <KeyboardArrowUpIcon />\r\n                </Fab>\r\n            </ScrollTop>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n// Theme\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        padding: theme.spacing(2, 2, 10, 2),\r\n    },\r\n}));\r\n\r\nconst Body = (props) => {\r\n\r\n    const { children } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container className={classes.root} maxWidth=\"lg\">\r\n            {children}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Body;","import React from 'react';\r\n// Theme\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    appBar: {\r\n        top: 'auto',\r\n        bottom: 0,\r\n    },\r\n    typography: {\r\n        display: 'block',\r\n        margin: 'auto',\r\n    },\r\n}));\r\n\r\nconst Footer = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar} component=\"footer\">\r\n            <Toolbar variant=\"dense\">\r\n                <Typography component=\"div\" gutterBottom align=\"center\" className={classes.typography}>\r\n                    <small>&copy; WebSEO Online Devices {new Date().getFullYear()}</small>\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n// Theme\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst FieldSet = (props) => {\r\n\r\n    const { children, legend, className } = props;\r\n\r\n    return (\r\n        <FormControl component=\"fieldset\" fullWidth className={className}>\r\n            <FormLabel component=\"legend\">{legend}</FormLabel>\r\n            {children}\r\n        </FormControl>\r\n    );\r\n\r\n}\r\n\r\nexport default FieldSet;","import React from 'react';\r\n// Theme\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst InputTextField = (props) => {\r\n\r\n    return (\r\n        <TextField \r\n            type=           {props.type} \r\n            id=             {props.id} \r\n            name=           {props.name} \r\n            placeholder=    {props.placeholder}\r\n            onChange=       {props.onChange} \r\n            onBlur=         {props.onBlur}\r\n            error=          {props.error ? true : undefined}\r\n            label=          {props.label}\r\n            required=       {props.required}\r\n            inputProps=     {{ \r\n                ['data-key']:       props.dataKey, \r\n                ['data-deviceid']:  props.dataDeviceID, \r\n                ['data-fieldid']:   props.dataFieldID, \r\n                value:              props.value,\r\n                defaultValue:       props.defaultValue \r\n            }}\r\n            size=           \"small\"\r\n            variant=        \"filled\" \r\n            margin=         \"none\"\r\n            fullWidth\r\n        />\r\n    );\r\n\r\n}\r\n\r\nexport default InputTextField;","import React from 'react';\r\n// Theme\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\n\r\nconst InputRadio = (props) => {\r\n\r\n    return (\r\n        <FormControlLabel\r\n            control={\r\n                <Radio\r\n                    id=             {props.id} \r\n                    name=           {props.name} \r\n                    onChange=       {props.onChange} \r\n                    onBlur=         {props.onBlur}\r\n                    checked=        {props.checked} \r\n                    error=          {props.error ? true : undefined}\r\n                    required=       {props.required}\r\n                    inputProps=     {{ \r\n                        ['data-key']:       props.dataKey, \r\n                        ['data-deviceid']:  props.dataDeviceID, \r\n                        ['data-fieldid']:   props.dataFieldID, \r\n                        value:              props.value\r\n                    }}\r\n                />\r\n            }\r\n            labelPlacement={props.labelPlacement}\r\n            label={props.label}\r\n            htmlFor={props.htmlFor}\r\n        />\r\n    );\r\n\r\n}\r\n\r\nexport default InputRadio;","import React from 'react';\r\n// Theme\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst InputCheckbox = (props) => {\r\n\r\n    return (\r\n        <FormControlLabel\r\n            control={\r\n                <Checkbox\r\n                    id=             {props.id} \r\n                    name=           {props.name} \r\n                    onChange=       {props.onChange} \r\n                    onBlur=         {props.onBlur}\r\n                    checked=        {props.checked} \r\n                    error=          {props.error ? true : undefined}\r\n                    required=       {props.required}\r\n                    inputProps=     {{ \r\n                        ['data-key']:       props.dataKey, \r\n                        ['data-deviceid']:  props.dataDeviceID, \r\n                        ['data-fieldid']:   props.dataFieldID, \r\n                        value:              props.value \r\n                    }}\r\n                />\r\n            }\r\n            labelPlacement={props.labelPlacement}\r\n            label={props.label}\r\n            htmlFor={props.htmlFor}\r\n        />\r\n    );\r\n\r\n}\r\n\r\nexport default InputCheckbox;","import React, { useState, useEffect } from 'react';\r\n// Theme\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport ComputerIcon from '@material-ui/icons/Computer';\r\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    profileDetails: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        [theme.breakpoints.down(500)]: { // max-width: 500px\r\n            '& > span:first-child': {\r\n                flex: '1 1 100%',\r\n                marginBottom: theme.spacing(1),\r\n            },\r\n        },\r\n    },\r\n    icon: {\r\n        color: theme.palette.action.disabled,\r\n        verticalAlign: 'sub',\r\n        marginLeft: 5,\r\n    },\r\n    badge: {\r\n        marginLeft: theme.spacing(1),\r\n        '& > span': {\r\n            fontSize: 10,    \r\n            minWidth: 15,\r\n            width: 15,\r\n            height: 15,\r\n        },\r\n        [theme.breakpoints.down(500)]: { // max-width: 500px\r\n            marginLeft: 0,\r\n            marginRight: theme.spacing(1),\r\n        },\r\n    }\r\n}));\r\n\r\nconst Users = (props) => {\r\n\r\n    const { user, selectedUser, onClick } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const [devicesNum, setDevicesNum] = useState({});\r\n\r\n    useEffect(() => {\r\n\r\n        setDevicesNum({ \r\n            laptopsNum: user.devices.laptops.length || 0, \r\n            monitorsNum: user.devices.monitors.length || 0\r\n        });\r\n\r\n    }, [user]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ListItem \r\n                alignItems=\"flex-start\"\r\n                id={user.googleId}\r\n                key={user.googleId}\r\n                role={user.role}\r\n                onClick={onClick}\r\n                dense \r\n                button\r\n                className={classes.listItem}\r\n            >\r\n                <ListItemAvatar>\r\n                    <Avatar alt={user.profile.name} src={user.profile.imageUrl} />\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                    primary={\r\n                        <React.Fragment>\r\n                            <Typography\r\n                                component=\"span\"\r\n                                variant=\"body1\"\r\n                                display=\"inline\"\r\n                            >\r\n                                {user.profile.name}\r\n                            </Typography>\r\n                            {user.role === 'admin' && (\r\n                                <VpnKeyIcon fontSize=\"small\" className={classes.icon} />\r\n                            )}\r\n                        </React.Fragment>\r\n                    }\r\n                    secondary={\r\n                        <Typography\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            color=\"textPrimary\"\r\n                            className={classes.profileDetails}\r\n                        >\r\n                            <span>{user.profile.email}</span>\r\n                            {(devicesNum.laptopsNum > 0) && (\r\n                                <Badge className={classes.badge} badgeContent={devicesNum.laptopsNum} color=\"secondary\">\r\n                                    <ComputerIcon fontSize=\"small\" className={classes.icon} />\r\n                                </Badge>\r\n                            )}\r\n                            {(devicesNum.monitorsNum > 0) && (\r\n                                <Badge className={classes.badge} badgeContent={devicesNum.monitorsNum} color=\"secondary\">\r\n                                    <DesktopWindowsIcon fontSize=\"small\" className={classes.icon} />\r\n                                </Badge>\r\n                            )}\r\n                        </Typography>\r\n                    }\r\n                />\r\n                <ListItemSecondaryAction>\r\n                    <IconButton edge=\"end\" aria-label=\"Selected user\">\r\n                        <Checkbox\r\n                            onClick={onClick}\r\n                            checked={user.googleId === selectedUser ? true : false}\r\n                            tabIndex={-1}\r\n                            disableRipple\r\n                        />\r\n                    </IconButton>\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n            <Divider component=\"li\" />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Users;","const userObjectConstructor = (profile) => {\r\n    return {\r\n        [profile.googleId]: {    \r\n            googleId: profile.googleId,\r\n            role: 'user',\r\n            profile: {\r\n                imageUrl:   profile.imageUrl,\r\n                email:      profile.email,\r\n                name:       profile.name,\r\n                givenName:  profile.givenName,\r\n                familyName: profile.familyName\r\n            },\r\n            devices: {\r\n                laptops: {},\r\n                monitors: {}\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default userObjectConstructor;","// Utils\r\nimport userObjectConstructor from './userObjectConstructor';\r\n\r\nconst writeUserData = (profileObject, dbRef) => {\r\n\r\n    const setUserObject = userObjectConstructor(profileObject);\r\n\r\n    let existingData = null;\r\n\r\n    dbRef.once('value', (snapshot) => {\r\n        existingData = snapshot.val();\r\n    });\r\n\r\n    dbRef.set({...existingData, ...setUserObject}, (error) => {\r\n        if (error) {\r\n            console.error(\"Data could not be saved.\" + error);\r\n        } else {\r\n            console.info(\"Data saved successfully.\");\r\n        }\r\n    });\r\n};\r\n\r\nexport default writeUserData;","const validateFields = (validationData, type) => {\r\n\r\n    let invalidField = false;\r\n\r\n    switch(type) {\r\n\r\n        case 'add':\r\n            \r\n            for (let [key] of Object.entries(validationData)) {\r\n                if (\r\n                    validationData.hasOwnProperty(key) && \r\n                    validationData[key] === true\r\n                    ) {\r\n                    invalidField = true;\r\n                    break;\r\n                } else {\r\n                    invalidField = false;\r\n                }\r\n            }\r\n\r\n            break;\r\n        case 'update':\r\n\r\n            for (let [key] of Object.entries(validationData)) {\r\n                if (\r\n                    validationData.hasOwnProperty(key) && \r\n                    validationData[key] === true\r\n                    ) {\r\n                    invalidField = true;\r\n                    break;\r\n                } else {\r\n                    invalidField = false;\r\n                }\r\n            }\r\n\r\n            break;\r\n        default:\r\n            return;\r\n\r\n    }\r\n\r\n    return invalidField ? true : false;\r\n\r\n}\r\n\r\nexport default validateFields;","import React, { useState, useEffect } from 'react';\r\n// Components\r\nimport withFirebase from './withFirebase';\r\nimport FieldSet from '../presentational/FieldSet';\r\nimport InputTextField from '../presentational/InputTextField';\r\nimport InputRadio from '../presentational/InputRadio';\r\nimport InputCheckbox from '../presentational/InputCheckbox';\r\nimport Users from '../presentational/Users';\r\nimport Loading from '../presentational/Loading';\r\nimport Error from '../presentational/Error';\r\n// Utils\r\nimport useFirebaseDataApi from '../../utils/hooks/useFirebaseDataApi';\r\nimport writeUserData from '../../utils/writeUserData';\r\nimport validateFields from '../../utils/validateFields';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// Actions\r\nimport { alertProps } from '../../redux/actions/actions';\r\n// Theme\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        marginBottom: 20,\r\n    },\r\n    cardContent: {\r\n        '&:last-child': {\r\n            paddingBottom: theme.spacing(2),\r\n        }\r\n    },\r\n    cardActions: {\r\n        padding: 0,\r\n        '&:not(:empty)': {\r\n            marginTop: theme.spacing(2),\r\n        }\r\n    },\r\n    buttonGroup: {\r\n        width: '100%',\r\n        [theme.breakpoints.down(500)]: { // max-width: 500px\r\n            '& > button': {\r\n                flex: '1 1 50%',\r\n            },\r\n        },\r\n        [theme.breakpoints.down(350)]: { // max-width: 350px\r\n            flexWrap: 'wrap',\r\n            '& > button': {\r\n                flex: '1 1 100%',\r\n                margin: 'auto',\r\n                borderRadius: '4px !important',\r\n            },\r\n            '& > button:disabled': {\r\n                border: '1px solid rgba(0, 0, 0, 0.12)',\r\n            },\r\n            '& > button:first-of-type': {\r\n                marginBottom: theme.spacing(2),\r\n            },\r\n        },\r\n    },\r\n    fieldSet: {\r\n        marginTop: theme.spacing(2),\r\n        paddingTop: theme.spacing(1),\r\n        borderTop: '1px solid rgba(0, 0, 0, 0.12)',\r\n        '& > legend': {\r\n            paddingRight: theme.spacing(1),\r\n        },\r\n    },\r\n    fieldWrap: {\r\n        [theme.breakpoints.up(750)]: { // min-width: 750px\r\n            '& > div:not(:last-child)': {\r\n                padding: theme.spacing(0, 2, 0, 0),\r\n            },\r\n        },\r\n        [theme.breakpoints.down(750)]: { // max-width: 750px\r\n            '& > div': {\r\n                flex: '1 1 100%',\r\n                padding: theme.spacing(0),\r\n                marginBottom: theme.spacing(2),\r\n            },\r\n            '& > div:last-child label': {\r\n                marginLeft: theme.spacing(0),\r\n            },\r\n        },\r\n    },\r\n    icon: {\r\n        color: theme.palette.action.disabled,\r\n        verticalAlign: 'bottom',\r\n        marginRight: 5,\r\n    },\r\n}));\r\n\r\nconst AddItem = (props) => {\r\n    const   state_profileObject = useSelector(state => state.profileObject),\r\n            state_googleId      = state_profileObject.googleId,\r\n            state_role          = state_profileObject.role,\r\n            dispatch            = useDispatch(),\r\n            setAlertProps       = (props) => dispatch(alertProps(props));\r\n\r\n    const   { firebase } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const   [{ userData, isError, isLoading }, fetchFirebaseUsers] = useFirebaseDataApi(firebase);\r\n\r\n    const   [deviceData, setDeviceData] = useState({ laptops: false, monitors: false }),\r\n            [deviceType, setDeviceType] = useState(null),\r\n            [validationData, setValidationData] = useState({}),\r\n            [addDevice, setAddDevice] = useState({ laptops: false, monitors: false }),\r\n            [isDisabled, setIsDisabled] = useState(true),\r\n            [employeeAssignment, setEmployeeAssignment] = useState(false),\r\n            [userId, setUserId] = useState(state_googleId);\r\n\r\n    useEffect(() => {\r\n\r\n        fetchFirebaseUsers(firebase);\r\n\r\n    },[firebase, isLoading, employeeAssignment]);\r\n\r\n    useEffect(() => {\r\n\r\n        if(\r\n            (deviceType === 'laptops' && Object.entries(validationData).length >= 2) ||\r\n            (deviceType === 'monitors' && Object.entries(validationData).length >= 3)\r\n            ) {\r\n            if(validationData && deviceType) {\r\n                setIsDisabled(validateFields(validationData, 'add'));\r\n            }\r\n        }\r\n\r\n    },[validationData]);\r\n\r\n    const onEmployeeAssignment = (checkValue) => {\r\n        setEmployeeAssignment(checkValue);\r\n        if (!checkValue) { \r\n            setUserId(state_googleId);\r\n        }\r\n    }\r\n\r\n    const onUserSelect = (googleId) => {\r\n        setUserId(googleId);\r\n    }\r\n\r\n    const onDeviceSelection = (target,e) => {\r\n        setDeviceType(target);\r\n        setAddDevice({ [target]:true });\r\n        setDeviceData({ laptops: false, monitors: false });\r\n        setValidationData({});\r\n        setIsDisabled(true);\r\n    }\r\n\r\n    const onAdd = () => {\r\n        const   db = firebase.database(),\r\n                ref = db.ref('users');\r\n\r\n        let child = null;\r\n\r\n        ref.child(userId).once('value', (snapshot) => {\r\n\r\n            if(!snapshot.exists()) {\r\n                writeUserData(state_profileObject, ref);\r\n            }\r\n\r\n            child = ref.child(userId).child('devices').child(deviceType);\r\n\r\n            child.push(deviceData[deviceType]).then(function(){\r\n                setAlertProps({ alert: true, severity: 'success', message: 'Device Added.', open: true });\r\n            }).catch(function(error) {\r\n                console.error('Update could not be saved.' + error);\r\n                setAlertProps({ alert: true, severity: 'error', message: 'Database Error. Update failed...', open: true });\r\n            });\r\n        });\r\n\r\n    };\r\n\r\n    const onCancel = () => {\r\n        setDeviceType(null);\r\n        setAddDevice(false);\r\n        setIsDisabled(true);\r\n    }\r\n\r\n    const onEdit = (key, value, fieldId, required) => {\r\n        let editData = {};\r\n        editData[deviceType] = { ...deviceData[deviceType], [key]: value };\r\n\r\n        setDeviceData({...deviceData, ...editData});\r\n\r\n        if(required) {\r\n            let fieldValidationData = {},\r\n                invalidity = (value.length || value === true) ? false : true;\r\n            fieldValidationData = { ...validationData, [fieldId]: invalidity };\r\n\r\n            setValidationData({...validationData, ...fieldValidationData});\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card className={classes.card} elevation={3}>\r\n            <CardContent className={classes.cardContent}>\r\n                <Typography variant=\"h6\">Add A New Device</Typography>\r\n                <FieldSet legend=\"Type of device\" className={classes.fieldSet}>\r\n                    <RadioGroup row>\r\n                        <InputRadio \r\n                            id=\"deviceType_laptop\" \r\n                            name=\"typeOfDevice\" \r\n                            value=\"laptops\" \r\n                            defaultChecked={addDevice.laptops} \r\n                            checked={addDevice.laptops}\r\n                            onChange={e => onDeviceSelection(e.target.value,e)}\r\n                            label=\"Laptop\"\r\n                            htmlFor=\"deviceType_laptop\"\r\n                        />\r\n                        <InputRadio \r\n                            id=\"deviceType_monitor\" \r\n                            name=\"typeOfDevice\" \r\n                            value=\"monitors\" \r\n                            defaultChecked={addDevice.monitors} \r\n                            checked={addDevice.monitors}\r\n                            onChange={e => onDeviceSelection(e.target.value,e)}\r\n                            label=\"Monitor\"\r\n                            htmlFor=\"deviceType_monitor\"\r\n                        />\r\n                    </RadioGroup>\r\n                </FieldSet>\r\n                { deviceType === 'laptops' && (\r\n                    <FieldSet legend=\"Add new laptop\" className={classes.fieldSet}>\r\n                        <Box display=\"flex\" flexWrap=\"wrap\" alignItems=\"center\" component=\"div\" className={classes.fieldWrap}>\r\n                            <Box flexGrow={1}>\r\n                                <InputTextField \r\n                                    placeholder='Make / Model'\r\n                                    id='laptop_makeModel'\r\n                                    dataKey='makeModel'\r\n                                    dataFieldID={`laptops_makeModel${1}`}\r\n                                    error={validationData[`laptops_makeModel${1}`]}\r\n                                    onBlur={e => onEdit(\r\n                                        e.target.dataset.key, \r\n                                        e.target.value, \r\n                                        e.target.dataset.fieldid, \r\n                                        e.target.required\r\n                                    )}\r\n                                    label=\"Make / Model\"\r\n                                    htmlFor=\"laptop_makeModel\"\r\n                                    required={true}\r\n                                />\r\n                            </Box>\r\n                            <Box flexGrow={1}>\r\n                                <InputTextField \r\n                                    placeholder='Serial No.'\r\n                                    id='laptop_serialNo'\r\n                                    dataKey='serialNo'\r\n                                    dataFieldID={`laptops_makeModel${2}`}\r\n                                    error={validationData[`laptops_makeModel${2}`]}\r\n                                    onBlur={e => onEdit(\r\n                                        e.target.dataset.key, \r\n                                        e.target.value, \r\n                                        e.target.dataset.fieldid, \r\n                                        e.target.required\r\n                                    )}\r\n                                    label=\"Serial No.\"\r\n                                    htmlFor=\"laptop_serialNo\"\r\n                                    required={true}\r\n                                />\r\n                            </Box>\r\n                            <Box>\r\n                                <InputCheckbox \r\n                                    placeholder='Taken home?'\r\n                                    id='laptop_takenHome'\r\n                                    dataKey='takenHome'\r\n                                    dataFieldID={`laptops_makeModel${3}`}\r\n                                    error={validationData[`laptops_makeModel${3}`]}\r\n                                    onChange={e => onEdit(\r\n                                        e.target.dataset.key, \r\n                                        e.target.checked, \r\n                                        e.target.dataset.fieldid, \r\n                                        e.target.required\r\n                                    )}\r\n                                    label=\"Taken home?\"\r\n                                    htmlFor=\"laptop_takenHome\"\r\n                                    labelPlacement=\"start\"\r\n                                    required={false}\r\n                                />\r\n                            </Box>\r\n                        </Box>\r\n                    </FieldSet>\r\n                )}\r\n                {deviceType === 'monitors' && (\r\n                    <FieldSet legend=\"Add new monitor\" className={classes.fieldSet}>\r\n                        <Box display=\"flex\" flexWrap=\"wrap\" alignItems=\"center\" component=\"div\" className={classes.fieldWrap}>\r\n                            <Box flexGrow={1}>\r\n                                <InputTextField \r\n                                    placeholder='Make / Model'\r\n                                    id='monitor_makeModel'\r\n                                    dataKey='makeModel'\r\n                                    dataFieldID={`monitors_makeModel${1}`}\r\n                                    error={validationData[`monitors_makeModel${1}`]}\r\n                                    onBlur={e => onEdit(\r\n                                        e.target.dataset.key, \r\n                                        e.target.value, \r\n                                        e.target.dataset.fieldid, \r\n                                        e.target.required\r\n                                    )}\r\n                                    label=\"Make / Model\"\r\n                                    htmlFor=\"monitor_makeModel\"\r\n                                    required={true}\r\n                                />\r\n                            </Box>\r\n                            <Box flexGrow={1}>\r\n                                <InputTextField \r\n                                    placeholder='Serial No.'\r\n                                    id='monitor_serialNo'\r\n                                    dataKey='serialNo'\r\n                                    dataFieldID={`monitors_makeModel${2}`}\r\n                                    error={validationData[`monitors_makeModel${2}`]}\r\n                                    onBlur={e => onEdit(\r\n                                        e.target.dataset.key, \r\n                                        e.target.value, \r\n                                        e.target.dataset.fieldid, \r\n                                        e.target.required\r\n                                    )}\r\n                                    label=\"Serial No.\"\r\n                                    htmlFor=\"monitor_serialNo\"\r\n                                    required={true}\r\n                                />\r\n                            </Box>\r\n                            <Box flexGrow={1}>\r\n                                <InputTextField \r\n                                    placeholder='Screen Size'\r\n                                    id='monitor_screenSize'\r\n                                    dataKey='screenSize'\r\n                                    dataFieldID={`monitors_makeModel${3}`}\r\n                                    error={validationData[`monitors_makeModel${3}`]}\r\n                                    onBlur={e => onEdit(\r\n                                        e.target.dataset.key, \r\n                                        e.target.value, \r\n                                        e.target.dataset.fieldid, \r\n                                        e.target.required\r\n                                    )}\r\n                                    label=\"Screen Size\"\r\n                                    htmlFor=\"monitor_screenSize\"\r\n                                    required={true}\r\n                                />\r\n                            </Box>\r\n                        </Box>\r\n                    </FieldSet>\r\n                )}\r\n                {(state_role === 'admin' && (deviceType === 'laptops' || deviceType === 'monitors')) && (\r\n                    <FieldSet legend=\"Assign to Employee\" className={classes.fieldSet}>\r\n                        <InputCheckbox \r\n                            id=\"employeeAssignment\" \r\n                            name=\"employeeAssignment\" \r\n                            defaultChecked={false} \r\n                            onChange={e => onEmployeeAssignment(e.target.checked)}\r\n                            label=\"Yes\"\r\n                            htmlFor=\"employeeAssignment\"\r\n                        />\r\n                        {employeeAssignment && (\r\n                            isLoading ? (\r\n                                <Loading size={20} display=\"inline\" />\r\n                                ) : (\r\n                                isError ? (\r\n                                    <Error />\r\n                                    ) : (\r\n                                        <List className={classes.list}>\r\n                                            {userData.map(user => (\r\n                                                <Users \r\n                                                    user={user} \r\n                                                    selectedUser={userId} \r\n                                                    key={user.googleId} \r\n                                                    onClick={() => onUserSelect(user.googleId)} \r\n                                                />\r\n                                            ))}\r\n                                        </List>\r\n                                    )\r\n                                )\r\n                            )\r\n                        }\r\n                    </FieldSet>\r\n                )}\r\n                <CardActions className={classes.cardActions}>\r\n                    {(deviceType === 'laptops' || deviceType === 'monitors') && (\r\n                        <ButtonGroup variant=\"outlined\" className={classes.buttonGroup}>\r\n                            <Button onClick={() => onAdd()} disabled={isDisabled}>\r\n                                <AddIcon fontSize=\"small\" className={classes.icon} /> Add Device\r\n                            </Button>\r\n                            <Button onClick={() => onCancel()}>\r\n                                <ClearIcon fontSize=\"small\" className={classes.icon} /> Cancel\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                    )}\r\n                </CardActions>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n\r\n}\r\n\r\nexport default withFirebase(AddItem);","// Escape special characters\r\n// see: https://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex/6969486#6969486\r\nconst escapeRegExp = (str) => {\r\n    return str.replace(/[-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\r\n}\r\n\r\nexport default escapeRegExp;","import React, { useState, useRef } from 'react';\r\n// Utils\r\nimport escapeRegExp from '../../utils/escapeRegExp';\r\n// Redux\r\nimport { useDispatch } from 'react-redux';\r\n// Actions\r\nimport { handleSearchFilter, storeSearchFilter } from '../../redux/actions/actions';\r\n// Theme\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n// Responsiveness\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    search: {\r\n        marginLeft: theme.spacing(2),\r\n        '& input': {\r\n            width: '20ch',\r\n            transition: '.3s',\r\n            paddingTop: theme.spacing(1),\r\n        },\r\n        '& input:focus': {\r\n            width: '25ch',\r\n        },\r\n        [theme.breakpoints.down(700)]: { // max-width: 700px\r\n            width: '100%',\r\n            margin: theme.spacing(1, 0),\r\n            '& input': {\r\n                width: '100%',\r\n                padding: theme.spacing(2, 0),\r\n            },\r\n            '& input:focus': {\r\n                width: '100%',\r\n            },\r\n        },\r\n    },\r\n    searchIcon: {\r\n        marginTop: '0 !important',\r\n    }\r\n}));\r\n\r\nconst SearchFilter = (props) => {\r\n\r\n    const { userData } = props;\r\n\r\n    const   isBreakpoint = useMediaQuery('(max-width:600px)'),\r\n            classes = useStyles();\r\n    \r\n    const   dispatch                = useDispatch(),\r\n            setSearchFilterResults  = (props) => dispatch(handleSearchFilter(props)),\r\n            setSearchFilterTerm     = (term) => dispatch(storeSearchFilter(term));\r\n\r\n    const   [isClear, setIsClear] = useState(false),\r\n            searchField = useRef();\r\n\r\n    const onSearchFilter = (value) => {\r\n\r\n        setIsClear(false);\r\n\r\n        value = value.replace( /\\s/g, '');\r\n\r\n        let matchArray,\r\n            regex = new RegExp(escapeRegExp(value), 'gi');\r\n\r\n        if(value.length) {\r\n\r\n            matchArray = userData.filter(user => {\r\n                return user.profile.name.match(regex);\r\n            })\r\n\r\n            setSearchFilterResults(matchArray);\r\n            setSearchFilterTerm(value);\r\n\r\n        } else {\r\n\r\n            setSearchFilterResults(null);\r\n            setSearchFilterTerm(null);\r\n\r\n        }\r\n    }\r\n\r\n    const onClear = () => {\r\n        setIsClear(true);\r\n        searchField.current.value = '';\r\n\r\n        setSearchFilterResults(null);\r\n        setSearchFilterTerm(null);\r\n    };\r\n\r\n    return (\r\n        <TextField\r\n            onKeyUp={e => onSearchFilter(e.target.value)}\r\n            className={classes.search}\r\n            id=\"user-search\"\r\n            placeholder=\"Search Users...\"\r\n            variant=\"filled\"\r\n            size={ isBreakpoint ? \"medium\" : \"small\" }\r\n            defaultValue={isClear ? '' : undefined}\r\n            inputRef={searchField}\r\n            InputProps={{\r\n                'aria-label': \"Search Users...\",\r\n                startAdornment: (\r\n                    <InputAdornment className={classes.searchIcon} position=\"start\">\r\n                        <SearchIcon fontSize=\"small\" color=\"action\" />\r\n                    </InputAdornment>\r\n                ),\r\n                endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                            aria-label=\"Clear Field\"\r\n                            onClick={() => onClear()}\r\n                            size=\"small\"\r\n                        >\r\n                            <ClearIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                ),\r\n            }}\r\n        />\r\n    );\r\n\r\n}\r\n\r\nexport default SearchFilter;","import React, { useState, useEffect } from 'react';\r\n// Components\r\nimport withFirebase from './withFirebase';\r\nimport SearchFilter from './SearchFilter';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// Actions\r\nimport { dataDisplayProps } from '../../redux/actions/actions';\r\n// Theme\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport ComputerIcon from '@material-ui/icons/Computer';\r\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        marginBottom: 5,\r\n        [theme.breakpoints.down(700)]: { // max-width: 700px\r\n            '& > div': {\r\n                flex: '1 1 100%',\r\n            },\r\n        },\r\n    },\r\n    icon: {\r\n        color: theme.palette.action.disabled,\r\n        verticalAlign: 'bottom',\r\n        marginLeft: 5,\r\n        [theme.breakpoints.down(850)]: { // max-width: 850px\r\n            marginLeft: 0,\r\n        },\r\n    },\r\n    chip: {\r\n        marginRight: theme.spacing(1),\r\n        [theme.breakpoints.down(850)]: { // max-width: 850px\r\n            '& > .MuiChip-label': {\r\n                fontSize: 0,\r\n            },\r\n        },\r\n        [theme.breakpoints.down(350)]: { // max-width: 350px\r\n            display: 'none',\r\n        },\r\n    },\r\n    badge: {\r\n        marginRight: 0,\r\n        '& > span': {\r\n            position: 'relative',\r\n            transform: 'scale(1) translate(0%, -5%)',\r\n            background: '#9c9c9c',\r\n        }\r\n    },\r\n}));\r\n\r\nconst UserListHeader = (props) => {\r\n\r\n    const { userData } = props;\r\n\r\n    const classes = useStyles();\r\n    \r\n    const   state_displayTypeSummary    = useSelector(state => state.dataDisplayObject.displayTypeSummary),\r\n            dispatch                    = useDispatch(),\r\n            setDataDisplayProps         = (props) => dispatch(dataDisplayProps(props));\r\n\r\n    const   [displayType, setDisplayType]   = useState(state_displayTypeSummary),\r\n            [devicesNum, setDevicesNum]     = useState({});\r\n\r\n    const onDeviceDetailsDisplay = (event) => {\r\n        setDisplayType(event.target.checked);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        setDataDisplayProps({ displayTypeSummary: displayType });\r\n\r\n    }, [displayType]);\r\n\r\n    useEffect(() => {\r\n\r\n        setDisplayType(state_displayTypeSummary);\r\n\r\n    }, [state_displayTypeSummary]);\r\n\r\n    useEffect(() => {\r\n\r\n        let deviceCount = {\r\n            laptopsNum: 0, \r\n            monitorsNum: 0\r\n        };\r\n\r\n        userData.map(user => {\r\n            deviceCount = {\r\n                ...deviceCount, \r\n                laptopsNum: (deviceCount.laptopsNum += user.devices.laptops.length), \r\n                monitorsNum: (deviceCount.monitorsNum += user.devices.monitors.length) \r\n            };\r\n        });\r\n\r\n        setDevicesNum({ ...deviceCount });\r\n\r\n    }, [userData]);\r\n\r\n    return (\r\n        <Box className={classes.root} display=\"flex\" flexWrap=\"wrap\" alignItems=\"end\">\r\n            <Box flexGrow={1}>\r\n                <FormControlLabel\r\n                    control={<Switch checked={displayType} onChange={onDeviceDetailsDisplay} />}\r\n                    label={displayType ? (\r\n                        \"Detail view\"\r\n                    ) : (\r\n                        \"Summary view\"\r\n                    )}\r\n                />\r\n                <Typography component=\"h5\" display=\"inline\">\r\n                    <Chip\r\n                        className={classes.chip}\r\n                        size=\"small\"\r\n                        label={\r\n                            <React.Fragment>\r\n                                Laptops\r\n                                <ComputerIcon fontSize=\"small\" className={classes.icon} />\r\n                            </React.Fragment>\r\n                        }\r\n                        icon={<Badge className={classes.badge} badgeContent={devicesNum.laptopsNum} color=\"primary\" />}\r\n                    />\r\n                    <Chip\r\n                        className={classes.chip}\r\n                        size=\"small\"\r\n                        label={\r\n                            <React.Fragment>\r\n                                Monitors\r\n                                <DesktopWindowsIcon fontSize=\"small\" className={classes.icon} />\r\n                            </React.Fragment>\r\n                        }\r\n                        icon={<Badge className={classes.badge} badgeContent={devicesNum.monitorsNum} color=\"primary\" />}\r\n                    />\r\n                </Typography>\r\n            </Box>\r\n            <Box flexGrow={1} display=\"flex\" justifyContent=\"flex-end\">\r\n                <SearchFilter userData={userData} />\r\n            </Box>\r\n        </Box>\r\n    );\r\n\r\n}\r\n\r\nexport default withFirebase(UserListHeader);","import React from 'react';\r\n// Redux\r\nimport { useSelector } from 'react-redux';\r\n// Theme\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    listItem: {\r\n        top: 'auto',\r\n        bottom: 0,\r\n        padding: 0,\r\n    },\r\n    avatar: {\r\n        marginRight: 10,\r\n    },\r\n    icon: {\r\n        color: theme.palette.action.disabled,\r\n        verticalAlign: 'sub',\r\n        marginLeft: 5,\r\n    },\r\n    mark: {\r\n        background: theme.palette.primary.main,\r\n        color: 'white',\r\n    }\r\n}));\r\n\r\nconst UserName = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const state_searchTerm = useSelector(state => state.searchFilterResults.searchTerm);\r\n\r\n    const   { name } = props,\r\n            regex = new RegExp(`(${state_searchTerm})`, 'gi'),\r\n            parts = name.split(regex);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {parts.filter(part => part).map((part, i) => (\r\n                regex.test(part) ? <mark key={i} className={classes.mark}>{part}</mark> : <span key={i}>{part}</span>\r\n            ))}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst PrimaryContent = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const { name, roles } = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <UserName name={name} />\r\n            {(roles.viewerRole === 'admin' && roles.userRole === 'admin') && (\r\n                <VpnKeyIcon fontSize=\"small\" className={classes.icon} />\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst SecondaryContent = (props) => {\r\n\r\n    const { email } = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <a href={`mailto:${email}`}>{email}</a>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst ListItemProfile = (props) => {\r\n\r\n    const   classes = useStyles();\r\n\r\n    const   { profile, ...roles } = props,\r\n            typographyProps = { component: 'div' };\r\n\r\n    return (\r\n        <ListItem data-role={roles.viewerRole} className={classes.listItem} component=\"div\">\r\n            <ListItemAvatar>\r\n                <Avatar alt={profile.name} src={profile.imageUrl} className={classes.avatar} />\r\n            </ListItemAvatar>\r\n            <ListItemText \r\n                primary={<PrimaryContent name={profile.name} {...roles} />} \r\n                secondary={<SecondaryContent email={profile.email} />} \r\n                primaryTypographyProps={typographyProps}\r\n                secondaryTypographyProps={typographyProps}\r\n            />\r\n        </ListItem>\r\n    );\r\n\r\n}\r\n\r\nexport default ListItemProfile;","import React, { useState, useEffect } from 'react';\r\n// Components\r\nimport withFirebase from '../containers/withFirebase';\r\nimport InputTextField from './InputTextField';\r\nimport InputCheckbox from './InputCheckbox';\r\n// Utils\r\nimport validateFields from '../../utils/validateFields';\r\n// Redux\r\nimport { useDispatch } from 'react-redux';\r\n// Actions\r\nimport { alertProps } from '../../redux/actions/actions';\r\n// Theme\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n// Responsiveness\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    icon: {\r\n        color: theme.palette.action.disabled,\r\n        verticalAlign: 'bottom',\r\n        marginRight: 5,\r\n    },\r\n    tableRow: {\r\n        [theme.breakpoints.down(450)]: { // max-width: 450px\r\n            '& .MuiTableCell-body': {\r\n                flexDirection: 'column',\r\n                alignItems: 'end',\r\n                textAlign: 'left',\r\n            },\r\n        },\r\n    },\r\n    tableRowFlex: { // max-width: 960px || max-width: 750px\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        '& .MuiTableCell-body': {\r\n            flex: '1 1 100%',\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            flexWrap: 'wrap',\r\n            flexDirection: 'row',\r\n            alignItems: 'center',\r\n            padding: theme.spacing(1, 2),\r\n        },\r\n        '&:not(:first-child) .MuiTableCell-body:first-child': {\r\n            borderTop: '2px solid rgba(224, 224, 224, 1)',\r\n        },\r\n        '& .MuiTableCell-body > strong': {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        '& .MuiTableCell-body > label': {\r\n            marginRight: 0,\r\n        },\r\n    },\r\n    tableEmptyColumn: {\r\n        padding: '0 !important',\r\n    },\r\n    tableActionColumn: {\r\n        width: '10%',\r\n        minWidth: 150,\r\n    },\r\n    buttonGroup: {\r\n        width: '100%',\r\n        [theme.breakpoints.down(500)]: { // max-width: 500px\r\n            '& > button': {\r\n                flex: '1 1 50%',\r\n            },\r\n        },\r\n        [theme.breakpoints.down(350)]: { // max-width: 350px\r\n            flexWrap: 'wrap',\r\n            '& > button': {\r\n                flex: '1 1 100%',\r\n                margin: 'auto',\r\n                borderRadius: '4px !important',\r\n                border: '1px solid rgba(0, 0, 0, 0.23) !important',\r\n            },\r\n            '& > button:first-of-type': {\r\n                marginBottom: theme.spacing(2),\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\nconst DeviceTableRow = (props) => {\r\n\r\n    const   { firebase, device, deviceType, state_user, user_googleId, user_edit } = props,\r\n            label_makeModel = 'Make / Model',\r\n            label_serialNo = 'Serial No.',\r\n            label_takenHome = 'Taken Home?',\r\n            label_screenSize = 'Screen Size';\r\n\r\n    const   isBreakpoint_960 = useMediaQuery('(max-width:960px)'),\r\n            isBreakpoint_750 = useMediaQuery('(max-width:750px)'),\r\n            classes = useStyles();\r\n\r\n    const   dispatch      = useDispatch(),\r\n            setAlertProps = (props) => dispatch(alertProps(props));\r\n\r\n    const   [deviceData, setDeviceData] = useState({}),\r\n            [isDisabled, setIsDisabled] = useState(false),\r\n            [inputChecked, setInputChecked] = useState(device.takenHome),\r\n            [validationData, setValidationData] = useState({});\r\n\r\n    useEffect(() => {\r\n\r\n        if(validationData) {\r\n            setIsDisabled(validateFields(validationData, 'update'));\r\n        }\r\n\r\n    },[validationData]);\r\n\r\n    const onRemove = (userId, deviceId, deviceType) => {\r\n        const   db      = firebase.database(),\r\n                ref     = db.ref('users'),\r\n                child   = ref.child(userId).child('devices').child(deviceType).child(deviceId);\r\n\r\n        child.remove().then(function(){\r\n            setAlertProps({ alert: true, severity: 'success', message: 'Device Removed.', open: true });\r\n        }).catch(function(error) {\r\n            console.error('Update could not be saved.' + error);\r\n            setAlertProps({ alert: true, severity: 'error', message: 'Database Error. Removal failed...', open: true });\r\n        });\r\n    };\r\n\r\n    const onUpdate = (userId, deviceId, deviceType) => {\r\n        const   db      = firebase.database(),\r\n                ref     = db.ref('users'),\r\n                child   = ref.child(userId).child('devices').child(deviceType).child(deviceId);\r\n\r\n        let updateData = deviceData[deviceId]; \r\n\r\n        child.once('value', (snapshot) => {\r\n            let existingData = snapshot.val();\r\n            child.update({ ...existingData, ...updateData }).then(function(){\r\n                    setAlertProps({ alert: true, severity: 'success', message: 'Update successful!', open: true });\r\n                }).catch(function(error) {\r\n                    console.error('Update could not be saved.' + error);\r\n                    setAlertProps({ alert: true, severity: 'error', message: 'Database Error. Update failed...', open: true });\r\n                });\r\n        });\r\n    };\r\n\r\n    const onEdit = (key, value, deviceId, fieldId, required, type) => {\r\n\r\n        let editData = {};\r\n        editData[deviceId] = { ...deviceData[deviceId], [key]: value };\r\n\r\n        setDeviceData({...deviceData, ...editData});\r\n\r\n        if(required) {\r\n            let fieldValidationData = {},\r\n                invalidity = (value.length || value === true) ? false : true;\r\n            fieldValidationData = { ...validationData, [fieldId]: invalidity };\r\n\r\n            setValidationData({...validationData, ...fieldValidationData});\r\n        }\r\n\r\n        if(type === 'checkbox') {\r\n            setInputChecked(value);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <TableRow key={device.id} id={device.id} className={\r\n            clsx(\r\n                classes.tableRow, \r\n                ((isBreakpoint_960 && (user_googleId === user_edit)) || isBreakpoint_750) && classes.tableRowFlex\r\n            )\r\n        }>\r\n            {( state_user.dataEdit && \r\n                (user_googleId === user_edit) && \r\n                (user_googleId === state_user.googleId || state_user.role === 'admin') ) ? (\r\n                <React.Fragment>\r\n                    <TableCell align=\"left\">\r\n                        <InputTextField \r\n                            defaultValue={device.makeModel} \r\n                            dataKey='makeModel' \r\n                            dataDeviceID={device.id}\r\n                            dataFieldID={device.id+1}\r\n                            error={validationData[device.id+1]}\r\n                            label='Make / Model'\r\n                            onBlur={e => onEdit(\r\n                                e.target.dataset.key, \r\n                                e.target.value, \r\n                                e.target.dataset.deviceid, \r\n                                e.target.dataset.fieldid, \r\n                                e.target.required\r\n                            )} \r\n                            required={true}\r\n                        />\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                        <InputTextField \r\n                            defaultValue={device.serialNo} \r\n                            dataKey='serialNo' \r\n                            dataDeviceID={device.id}\r\n                            dataFieldID={device.id+2}\r\n                            error={validationData[device.id+2]}\r\n                            label='Serial No.'\r\n                            onBlur={e => onEdit(\r\n                                e.target.dataset.key, \r\n                                e.target.value, \r\n                                e.target.dataset.deviceid, \r\n                                e.target.dataset.fieldid, \r\n                                e.target.required\r\n                            )} \r\n                            required={true}\r\n                        />\r\n                    </TableCell>\r\n                    {deviceType === 'laptops' && (\r\n                        <TableCell align=\"right\">\r\n                            {isBreakpoint_960 && (\r\n                                <strong>{label_takenHome}:</strong> \r\n                            )}\r\n                            <InputCheckbox \r\n                                defaultValue={device.takenHome} \r\n                                dataKey='takenHome' \r\n                                dataDeviceID={device.id}\r\n                                dataFieldID={device.id+3}\r\n                                error={validationData[device.id+3]}\r\n                                checked={inputChecked}\r\n                                type='checkbox'\r\n                                onChange={e => onEdit(\r\n                                    e.target.dataset.key, \r\n                                    e.target.checked ? true : false, \r\n                                    e.target.dataset.deviceid, \r\n                                    e.target.dataset.fieldid, \r\n                                    e.target.required,\r\n                                    e.target.type\r\n                                )} \r\n                                required={false}\r\n                            />\r\n                        </TableCell>\r\n                    )}\r\n                    {deviceType === 'monitors' && (\r\n                        <TableCell align=\"right\">\r\n                            <InputTextField \r\n                                defaultValue={device.screenSize} \r\n                                dataKey='screenSize' \r\n                                dataDeviceID={device.id}\r\n                                dataFieldID={device.id+4}\r\n                                error={validationData[device.id+4]}\r\n                                label='Screen Size'\r\n                                onBlur={e => onEdit(\r\n                                    e.target.dataset.key, \r\n                                    e.target.value, \r\n                                    e.target.dataset.deviceid, \r\n                                    e.target.dataset.fieldid, \r\n                                    e.target.required\r\n                                )}\r\n                                required={true}\r\n                            />\r\n                        </TableCell>\r\n                    )}\r\n                    <TableCell align=\"right\" className={classes.tableActionColumn}>\r\n                        <ButtonGroup variant=\"outlined\" className={classes.buttonGroup}>\r\n                            <Button onClick={() => onUpdate(user_googleId, device.id, deviceType)} disabled={isDisabled}>\r\n                                <UpdateIcon fontSize=\"small\" className={classes.icon} /> Update\r\n                            </Button>\r\n                            <Button onClick={() => onRemove(user_googleId, device.id, deviceType)}>\r\n                                <ClearIcon fontSize=\"small\" className={classes.icon} /> Remove\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                    </TableCell>\r\n                </React.Fragment>\r\n            ) : (\r\n                <React.Fragment>\r\n                    <TableCell align=\"left\">\r\n                        {isBreakpoint_750 && (\r\n                            <strong>{label_makeModel}:</strong> \r\n                        )}\r\n                        <span>{device.makeModel}</span>\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                        {isBreakpoint_750 && (\r\n                            <strong>{label_serialNo}:</strong> \r\n                        )}\r\n                        <span>{device.serialNo}</span>\r\n                    </TableCell>\r\n                    {deviceType === 'laptops' && (\r\n                        <TableCell align=\"right\">\r\n                            {isBreakpoint_750 && (\r\n                                <strong>{label_takenHome}:</strong> \r\n                            )}\r\n                            {device.takenHome ? (\r\n                                <span><CheckIcon className={classes.icon} /></span>\r\n                            ) : (\r\n                                <span><ClearIcon className={classes.icon} /></span>\r\n                            )}\r\n                        </TableCell>\r\n                    )}\r\n                    {deviceType === 'monitors' && (\r\n                        <TableCell align=\"right\">\r\n                            {isBreakpoint_750 && (\r\n                                <strong>{label_screenSize}:</strong> \r\n                            )}\r\n                            <span>{device.screenSize}</span>\r\n                        </TableCell>\r\n                    )}\r\n                    <TableCell align=\"right\" className={classes.tableEmptyColumn}></TableCell>\r\n                </React.Fragment>\r\n            )}\r\n        </TableRow>\r\n    );\r\n\r\n}\r\n\r\nexport default withFirebase(DeviceTableRow);","import React from 'react';\r\n// Components\r\nimport DeviceTableRow from './DeviceTableRow';\r\n// Redux\r\nimport { useSelector } from 'react-redux';\r\n// Theme\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport ComputerIcon from '@material-ui/icons/Computer';\r\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\r\n// Responsiveness\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    table: {\r\n        minWidth: 650,\r\n        [theme.breakpoints.down(750)]: { // max-width: 750px\r\n            minWidth: '100%',\r\n        },\r\n    },\r\n    tableContainer: {\r\n        marginBottom: 10,\r\n    },\r\n    tableHeaderWrap: {\r\n    },\r\n    tableHeaderWrapFlex: { // max-width: 960px || max-width: 750px\r\n        '& > tr': {\r\n            justifyContent: 'space-between',\r\n            display: 'flex',\r\n        },\r\n        '& > tr:last-child:not([class*=\"tableHeader\"])': {\r\n            display: 'none',\r\n        }\r\n    },\r\n    tableHeader: {\r\n        backgroundColor: theme.palette.action.selected,\r\n        [theme.breakpoints.down(750)]: { // max-width: 750px\r\n            justifyContent: 'space-between',\r\n        },\r\n    },\r\n    tableLeadColumn: {\r\n        minWidth: 300,\r\n    },\r\n    tableDataColumn: {\r\n        width: '20%',\r\n        minWidth: 150,\r\n    },\r\n    tableEmptyColumn: {\r\n        padding: '0 !important',\r\n    },\r\n    icon: {\r\n        color: theme.palette.action.disabled,\r\n        verticalAlign: 'bottom',\r\n    },\r\n    badge: {\r\n        marginRight: 0,\r\n        '& > span': {\r\n            position: 'relative',\r\n            transform: 'scale(1) translate(0%, 0%)',\r\n            background: '#9c9c9c',\r\n        }\r\n    }\r\n}));\r\n\r\nconst DevicesTable = (props) => {\r\n\r\n    const { devices, deviceType, devicesNum, state_user, user_googleId, user_edit } = props;\r\n    \r\n    const state_displayTypeSummary = useSelector(state => state.dataDisplayObject.displayTypeSummary);\r\n\r\n    const   isBreakpoint_960 = useMediaQuery('(max-width:960px)'),\r\n            isBreakpoint_750 = useMediaQuery('(max-width:750px)'),\r\n            classes = useStyles();\r\n\r\n    return (\r\n        <TableContainer className={classes.tableContainer} component={Paper}>\r\n            <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\r\n                <TableHead className={\r\n                    clsx(\r\n                        classes.tableHeaderWrap, \r\n                        ((isBreakpoint_960 && (user_googleId === user_edit)) || isBreakpoint_750) && classes.tableHeaderWrapFlex\r\n                    )\r\n                }>\r\n                    {deviceType === 'laptops' && (\r\n                        <React.Fragment>\r\n                            <TableRow className={classes.tableHeader}>\r\n                                <TableCell colSpan={2}>\r\n                                    <Typography component=\"h5\"><ComputerIcon className={classes.icon} /> Laptops</Typography>\r\n                                </TableCell>\r\n                                <TableCell colSpan={2} align=\"right\">\r\n                                    <Badge className={classes.badge} badgeContent={devicesNum} color=\"primary\" />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            {!state_displayTypeSummary && (\r\n                                <TableRow>\r\n                                    <TableCell align=\"left\" className={classes.tableLeadColumn}>Make / Model</TableCell>\r\n                                    <TableCell align=\"right\" className={classes.tableDataColumn}>Serial No.</TableCell>\r\n                                    <TableCell align=\"right\" className={classes.tableDataColumn}>Taken Home?</TableCell>\r\n                                    {( state_user.dataEdit && \r\n                                        (user_googleId === user_edit) && \r\n                                        (user_googleId === state_user.googleId || state_user.role === 'admin') ) ? (\r\n                                            <TableCell align=\"right\" className={classes.tableDataColumn}>Actions</TableCell>\r\n                                        ) : (\r\n                                            <TableCell align=\"right\" className={classes.tableEmptyColumn}></TableCell>\r\n                                    )}\r\n                                </TableRow>\r\n                            )}\r\n                        </React.Fragment>\r\n                    )}\r\n                    {deviceType === 'monitors' && (\r\n                        <React.Fragment>\r\n                        <TableRow className={classes.tableHeader}>\r\n                            <TableCell colSpan={2}>\r\n                                <Typography component=\"h5\"><DesktopWindowsIcon className={classes.icon} /> Monitors</Typography>\r\n                            </TableCell>\r\n                            <TableCell colSpan={2} align=\"right\">\r\n                                <Badge className={classes.badge} badgeContent={devicesNum} color=\"primary\" />\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        {!state_displayTypeSummary && (\r\n                            <TableRow>\r\n                                <TableCell align=\"left\" className={classes.tableLeadColumn}>Make / Model</TableCell>\r\n                                <TableCell align=\"right\" className={classes.tableDataColumn}>Serial No.</TableCell>\r\n                                <TableCell align=\"right\" className={classes.tableDataColumn}>Screen Size</TableCell>\r\n                                {( state_user.dataEdit && \r\n                                    (user_googleId === user_edit) && \r\n                                    (user_googleId === state_user.googleId || state_user.role === 'admin') ) ? (\r\n                                        <TableCell align=\"right\" className={classes.tableDataColumn}>Actions</TableCell>\r\n                                    ) : (\r\n                                        <TableCell align=\"right\" className={classes.tableEmptyColumn}></TableCell>\r\n                                )}\r\n                            </TableRow>\r\n                        )}\r\n                        </React.Fragment>\r\n                    )}\r\n                </TableHead>\r\n                <TableBody>\r\n                    {(deviceType === 'laptops' && !state_displayTypeSummary) && (\r\n                        devices.map(laptop => (\r\n                            <DeviceTableRow \r\n                                device={laptop} \r\n                                deviceType={deviceType}\r\n                                key={laptop.id} \r\n                                id={laptop.id}\r\n                                state_user={state_user} \r\n                                user_edit={user_edit} \r\n                                user_googleId={user_googleId}\r\n                            />\r\n                        ))\r\n                    )}\r\n                    {(deviceType === 'monitors' && !state_displayTypeSummary) && (\r\n                        devices.map(monitor => (\r\n                            <DeviceTableRow \r\n                                device={monitor} \r\n                                deviceType={deviceType}\r\n                                key={monitor.id} \r\n                                id={monitor.id}\r\n                                state_user={state_user} \r\n                                user_edit={user_edit} \r\n                                user_googleId={user_googleId}\r\n                            />\r\n                        ))\r\n                    )}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n\r\n}\r\n\r\nexport default DevicesTable;","import React, { useState, useEffect } from 'react';\r\n// Components\r\nimport withFirebase from './withFirebase';\r\nimport ListItemProfile from '../presentational/ListItemProfile';\r\nimport DevicesTable from '../presentational/DevicesTable';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// Actions\r\nimport { userAdditionalProps, dataDisplayProps } from '../../redux/actions/actions';\r\n// Theme\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport ComputerIcon from '@material-ui/icons/Computer';\r\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    listHeader: {\r\n        [theme.breakpoints.down(600)]: { // max-width: 600px\r\n            '& > div': {\r\n                flex: '1 1 100%',\r\n            },\r\n            '& > div:last-child': {\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                margin: theme.spacing(1, 0),\r\n                padding: theme.spacing(2, 0),\r\n                borderTop: '1px solid rgba(224, 224, 224, 1)',\r\n            },\r\n            '& > div:last-child > button': {\r\n                flex: '1 1 100%',\r\n                marginLeft: theme.spacing(2),\r\n            },\r\n        },\r\n    },\r\n    icon: {\r\n        color: theme.palette.action.disabled,\r\n        verticalAlign: 'bottom',\r\n        marginRight: 5,\r\n    },\r\n    badge: {\r\n        marginRight: theme.spacing(2),\r\n    }\r\n}));\r\n\r\nconst UserListItem = (props) => {\r\n\r\n    const { user, id } = props;\r\n\r\n    const classes = useStyles();\r\n    \r\n    const   state_user                  = useSelector(state => state.profileObject),\r\n            state_displayTypeSummary    = useSelector(state => state.dataDisplayObject.displayTypeSummary),\r\n            dispatch                    = useDispatch(),\r\n            setAdditionalProps          = (props) => dispatch(userAdditionalProps(props)),\r\n            setDataDisplayProps         = (props) => dispatch(dataDisplayProps(props));\r\n\r\n    const   [userEdit, setUserEdit] = useState(null),\r\n            [devicesNum, setDevicesNum] = useState({});\r\n\r\n    const onUserEdit = (boolean, userId = null) => {\r\n        setUserEdit(userId);\r\n        setAdditionalProps({ dataEdit: boolean });\r\n        setDataDisplayProps({ displayTypeSummary: false });\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        state_displayTypeSummary ? (\r\n            setAdditionalProps({ dataEdit: false })\r\n        ) : (\r\n            setAdditionalProps({ dataEdit: true })\r\n        );\r\n\r\n    }, [state_displayTypeSummary]);\r\n\r\n    useEffect(() => {\r\n\r\n        setDevicesNum({ \r\n            laptopsNum: user.devices.laptops.length || 0, \r\n            monitorsNum: user.devices.monitors.length || 0\r\n        });\r\n\r\n    }, [user]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {(devicesNum.laptopsNum > 0 || devicesNum.monitorsNum > 0) && (\r\n                <React.Fragment>\r\n                    <ListItem key={id} id={user.googleId}>\r\n                        <Box component=\"div\" style={{ width: '100%' }}>\r\n                            <Box display=\"flex\" flexWrap=\"wrap\" alignItems=\"center\" className={classes.listHeader}>\r\n                                <Box component=\"div\" flexGrow={1}>\r\n                                    <ListItemProfile profile={user.profile} roles={{ viewerRole: state_user.role, userRole: user.role }} />\r\n                                </Box>\r\n                                <Box component=\"div\">\r\n                                    {(devicesNum.laptopsNum > 0) && (\r\n                                        <Badge className={classes.badge} badgeContent={devicesNum.laptopsNum} color=\"secondary\">\r\n                                            <ComputerIcon className={classes.icon} />\r\n                                        </Badge>\r\n                                    )}\r\n                                    {(devicesNum.monitorsNum > 0) && (\r\n                                        <Badge className={classes.badge} badgeContent={devicesNum.monitorsNum} color=\"secondary\">\r\n                                            <DesktopWindowsIcon className={classes.icon} />\r\n                                        </Badge>\r\n                                    )}\r\n                                    {(user.devices.laptops.length > 0 || user.devices.monitors.length > 0) && (\r\n                                        // can the current user edit?\r\n                                        user.googleId === state_user.googleId || state_user.role === 'admin') && (\r\n                                            // is the current user editing?\r\n                                            state_user.dataEdit && (user.googleId === userEdit) ? (\r\n                                                <Button variant=\"contained\" onClick={() => onUserEdit(false)}>\r\n                                                    <ClearIcon fontSize=\"small\" className={classes.icon} /> Done\r\n                                                </Button>\r\n                                            ) : (\r\n                                                <Button variant=\"outlined\" onClick={() => onUserEdit(true, user.googleId)}>\r\n                                                    <UpdateIcon fontSize=\"small\" className={classes.icon} /> Update\r\n                                                </Button>\r\n                                            )\r\n                                    )}\r\n                                </Box>\r\n                            </Box>\r\n                            <div className='devices'>\r\n                                <div className='devices_laptops'>\r\n                                    {user.devices.laptops.length ? (\r\n                                        <DevicesTable \r\n                                            devices={user.devices.laptops} \r\n                                            deviceType='laptops'\r\n                                            devicesNum={devicesNum.laptopsNum}\r\n                                            state_user={state_user} \r\n                                            user_edit={userEdit} \r\n                                            user_googleId={user.googleId} \r\n                                        />\r\n                                    ) : (\r\n                                        <Typography component=\"div\">No Laptops found...</Typography>\r\n                                    )}\r\n                                </div>\r\n                                <div className='devices_monitors'>\r\n                                    {user.devices.monitors.length ? (\r\n                                        <DevicesTable \r\n                                            devices={user.devices.monitors} \r\n                                            deviceType='monitors'\r\n                                            devicesNum={devicesNum.monitorsNum}\r\n                                            state_user={state_user} \r\n                                            user_edit={userEdit} \r\n                                            user_googleId={user.googleId} \r\n                                        />\r\n                                    ) : (\r\n                                        <Typography component=\"div\">No Monitors found...</Typography>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </Box>\r\n                    </ListItem>\r\n                    <Divider component=\"li\" />\r\n                </React.Fragment>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n\r\n}\r\n\r\nexport default withFirebase(UserListItem);","import React, { useState, useEffect } from 'react';\r\n// Components\r\nimport withFirebase from './withFirebase';\r\nimport UserListHeader from './UserListHeader';\r\nimport UserListItem from './UserListItem';\r\nimport Loading from '../presentational/Loading';\r\nimport Error from '../presentational/Error';\r\n// Utils\r\nimport useFirebaseDataApi from '../../utils/hooks/useFirebaseDataApi';\r\n// Redux\r\nimport { useSelector } from 'react-redux';\r\n// Theme\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    list: {\r\n        width: '100%',\r\n        padding: 0,\r\n    },\r\n    text: {\r\n        padding: '20px 0'\r\n    },\r\n    icon: {\r\n        display: 'block',\r\n        fontSize: '3em',\r\n        margin: '20px auto 0 auto',\r\n    },\r\n}));\r\n\r\nconst UserList = (props) => {\r\n\r\n    const { firebase } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const state_filteredResults = useSelector(state => state.searchFilterResults.resultsObject);\r\n\r\n    const [{ userData, isError, isLoading }, fetchFirebaseUsers] = useFirebaseDataApi(firebase);\r\n\r\n    const [users, setUsers] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        fetchFirebaseUsers(firebase);\r\n\r\n    },[firebase, isLoading]);\r\n\r\n    useEffect(() => {\r\n\r\n        if(state_filteredResults) {\r\n            setUsers(state_filteredResults);\r\n        } else {\r\n            setUsers(userData);\r\n        }\r\n\r\n    },[state_filteredResults, userData]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {isLoading ? ( \r\n                <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" component=\"div\" style={{ width: '100%' }}>\r\n                    <Loading text={false} />\r\n                </Box>\r\n                ) : isError ? (\r\n                    <Error />\r\n                    ) : (users && (\r\n                            <React.Fragment>\r\n                                <UserListHeader userData={userData} />\r\n                                <Paper elevation={3}>\r\n                                    <List className={classes.list}>\r\n                                        {users.length ? (\r\n                                            users.map(user => (\r\n                                                <UserListItem user={user} key={user.googleId} id={user.googleId} />\r\n                                            ))\r\n                                        ) : (\r\n                                            <Typography align=\"center\" variant=\"h5\" className={classes.text}>\r\n                                                No Results...\r\n                                                <ErrorOutlineIcon fontSize=\"large\" color=\"disabled\" className={classes.icon} />\r\n                                            </Typography>\r\n                                        )}\r\n                                    </List>\r\n                                </Paper>\r\n                            </React.Fragment>\r\n                        )\r\n                    )\r\n            }\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default withFirebase(UserList);","import React, { useState, useEffect } from 'react';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// Actions\r\nimport { alertProps } from '../../redux/actions/actions';\r\n// Theme\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    anchorOriginBottomLeft: {\r\n        marginBottom: theme.spacing(5),\r\n    },\r\n}));\r\n\r\nconst Alert = (props) => {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst SnackbarAlert = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const   state_alertProps = useSelector(state => state.alertObject),\r\n            dispatch         = useDispatch(),\r\n            setAlertProps    = (props) => dispatch(alertProps(props));\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        \r\n        setIsOpen(state_alertProps.open);\r\n\r\n    },[state_alertProps]);\r\n\r\n    const onClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setIsOpen(false);\r\n        setAlertProps({ alert: false, severity: '', message: '', open: false });\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {(state_alertProps.alert && (\r\n                <Snackbar \r\n                    className={classes.anchorOriginBottomLeft}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }} \r\n                    open={isOpen} \r\n                    autoHideDuration={3000} \r\n                    onClose={onClose}\r\n                >\r\n                    <Alert onClose={onClose} severity={state_alertProps.severity}>\r\n                        {state_alertProps.message}\r\n                    </Alert>\r\n                </Snackbar>\r\n            ))}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default SnackbarAlert;","import React from 'react';\r\n// Components\r\nimport Header from '../presentational/Header';\r\nimport Body from '../presentational/Body';\r\nimport Footer from '../presentational/Footer';\r\nimport AddDevice from './AddDevice';\r\nimport UsersList from './UsersList';\r\nimport SnackbarAlert from '../presentational/SnackbarAlert';\r\n\r\nconst AppDashboard = () => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Header />\r\n            <Body>\r\n                <AddDevice />\r\n                <UsersList />\r\n                <SnackbarAlert />\r\n            </Body>\r\n            <Footer />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default AppDashboard;","import React from 'react';\r\n// Components\r\nimport LoginGoogle from './LoginGoogle';\r\nimport Footer from '../presentational/Footer';\r\n// Assets\r\nimport Logo from '../../assets/Web-SEO-Online-Logo-white-transparent.png'\r\n// Theme\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    gridContainer: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 50,\r\n    },\r\n    logo: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n        backgroundSize: \"80%\",\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    card: {\r\n        margin: 'auto',\r\n        width: '100%',\r\n        textAlign: 'center',\r\n    },\r\n    typography: {\r\n        fontWeight: 300,\r\n        marginBottom: 30,\r\n    }\r\n}));\r\n\r\nconst AppLogin = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid className={classes.gridContainer} container alignItems=\"center\" justify=\"center\">\r\n                <Grid item xs={8} sm={5} md={4} lg={3} xl={2}>\r\n                    <Card className={classes.card}>\r\n                        <CardMedia\r\n                            className={classes.logo}\r\n                            image={Logo}\r\n                            title=\"WebSEO Online Devices\"\r\n                        />\r\n                        <CardContent>\r\n                            <Typography className={classes.typography} variant=\"h6\">WebSEO Online Devices</Typography>\r\n                            <LoginGoogle />\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n            <Footer />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default AppLogin;","import React, { useMemo } from 'react';\r\n// Components\r\nimport AppDashboard from './AppDashboard';\r\nimport AppLogin from './AppLogin';\r\n// Redux\r\nimport { useSelector } from 'react-redux';\r\n// Theme\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nconst App = () => {\r\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\n\r\n    const theme = useMemo(\r\n        () =>\r\n            createMuiTheme({\r\n                palette: {\r\n                    type: prefersDarkMode ? 'dark' : 'light',\r\n                    primary: {\r\n                        main: '#aa1111',\r\n                    },\r\n                },\r\n            }),\r\n        [prefersDarkMode],\r\n    );\r\n    \r\n    const loggedIn = useSelector(state => state.userLogin.loggedIn);\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CssBaseline />\r\n            {loggedIn ? (\r\n                <AppDashboard />\r\n            ) : (\r\n                <AppLogin />\r\n            )}\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default App;","import { \r\n    LOG_IN_PENDING, \r\n    LOG_IN_FAILURE, \r\n    LOG_IN_SUCCESS, \r\n    LOG_OUT_SUCCESS\r\n} from '../actions/actionTypes';\r\n\r\nconst initialUserLoginState = {\r\n    loggedIn: false,\r\n    response: null,\r\n}\r\n\r\nexport default function( state = initialUserLoginState, action = {} ) {\r\n    switch(action.type) {\r\n        case LOG_IN_PENDING: {\r\n                console.log('pending');\r\n                return { ...state, loggedIn: false, response: null };\r\n            }\r\n        case LOG_IN_SUCCESS: {\r\n                console.log('success',action.payload);\r\n                const response = action.payload;\r\n                return { ...state, loggedIn: true, response: response };\r\n            }\r\n        case LOG_OUT_SUCCESS: {\r\n                console.log('success');\r\n                return { ...state, loggedIn: false, response: null };\r\n            }\r\n        case LOG_IN_FAILURE: {\r\n                console.log('failure');\r\n                const error = action.payload;\r\n                return { ...state, loggedIn: false, response: error };\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { \r\n    SET_USER_PROPS,\r\n    LOG_IN_SUCCESS,\r\n    LOG_OUT_SUCCESS\r\n} from '../actions/actionTypes';\r\n\r\nconst initialProfileObjectState = {\r\n    googleId: null,\r\n    role: null,\r\n    imageUrl: null,\r\n    email: null,\r\n    name: null,\r\n    givenName: null,\r\n    familyName: null,\r\n    userExists: false,\r\n    dataEdit: false\r\n}\r\n\r\nconst profileObjectConstructor = (payload) => {\r\n    let { profileObj: profileObject } = payload;\r\n    return {\r\n        googleId:   profileObject.googleId,\r\n        imageUrl:   profileObject.imageUrl,\r\n        email:      profileObject.email,\r\n        name:       profileObject.name,\r\n        givenName:  profileObject.givenName,\r\n        familyName: profileObject.familyName\r\n    }\r\n}\r\n\r\nexport default function( state = initialProfileObjectState, action = {} ) {\r\n    switch(action.type) {\r\n        case LOG_IN_SUCCESS: {\r\n            const profileObject = profileObjectConstructor(action.payload);\r\n            return { ...state, ...profileObject }\r\n        }\r\n        case SET_USER_PROPS: {\r\n            const userPropsObject = action.payload;\r\n            return { ...state, ...userPropsObject }\r\n        }\r\n        case LOG_OUT_SUCCESS: {\r\n            return { ...state, ...initialProfileObjectState }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SET_DEVICE_PROPS } from '../actions/actionTypes';\r\n\r\nconst initialDevicesObjectState = {\r\n    laptopsNum: 0,\r\n    monitorsNum: 0,\r\n}\r\n\r\nexport default function( state = initialDevicesObjectState, action = {} ) {\r\n    switch(action.type) {\r\n        case SET_DEVICE_PROPS: {\r\n            const devicesObject = action.payload;\r\n            return { ...state, ...devicesObject }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { HANDLE_FEEDBACK } from '../actions/actionTypes';\r\n\r\nconst initialAlertObjectState = {\r\n    alert: false,\r\n    severity: '',\r\n    message: '',\r\n    open: false,\r\n}\r\n\r\nexport default function( state = initialAlertObjectState, action = {} ) {\r\n    switch(action.type) {\r\n        case HANDLE_FEEDBACK: {\r\n            const alertObject = action.payload;\r\n            return { ...state, ...alertObject }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { HANDLE_DISPLAY } from '../actions/actionTypes';\r\n\r\nconst initialDisplayObjectState = {\r\n    displayTypeSummary: false,\r\n}\r\n\r\nexport default function( state = initialDisplayObjectState, action = {} ) {\r\n    switch(action.type) {\r\n        case HANDLE_DISPLAY: {\r\n            const displayObject = action.payload;\r\n            return { ...state, ...displayObject }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { \r\n    HANDLE_SEARCH_FILTER,\r\n    STORE_SEARCH_FILTER \r\n} from '../actions/actionTypes';\r\n\r\nconst initialSearchFilterState = {\r\n    searchTerm: null,\r\n    resultsObject: null\r\n}\r\n\r\nexport default function( state = initialSearchFilterState, action = {} ) {\r\n    switch(action.type) {\r\n        case HANDLE_SEARCH_FILTER: {\r\n            const resultsObject = action.payload;\r\n            return { ...state, resultsObject }\r\n        }\r\n        case STORE_SEARCH_FILTER: {\r\n            const term = action.payload;\r\n            return { ...state, searchTerm: term }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { HANDLE_LOADING } from '../actions/actionTypes';\r\n\r\nconst initialLoadingState = {\r\n    isLoading: false,\r\n}\r\n\r\nexport function handleLoading( state = initialLoadingState, action = {} ) {\r\n    switch(action.type) {\r\n        case HANDLE_LOADING: {\r\n                console.log('loading state:',action.payload);\r\n                const boolean = action.payload;\r\n                return { ...state, isLoading: boolean };\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport userLogin from './reducer_userLogin';\r\nimport profileObject from './reducer_profileObject';\r\nimport devicesObject from './reducer_devicesObject';\r\nimport alertObject from './reducer_alertObject';\r\nimport dataDisplayObject from './reducer_dataDisplayObject';\r\nimport searchFilterResults from './reducer_searchFilterResults';\r\nimport { handleLoading } from './reducer_utils';\r\n\r\nexport default combineReducers({ \r\n    userLogin, \r\n    profileObject, \r\n    devicesObject, \r\n    alertObject, \r\n    dataDisplayObject, \r\n    searchFilterResults, \r\n    handleLoading \r\n});","// Redux\r\nimport { createStore, applyMiddleware } from 'redux';\r\n// Middleware\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\n// Reducers\r\nimport rootReducer from './reducers';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    blacklist: ['searchFilterResults'],\r\n    storage,\r\n    stateReconciler: autoMergeLevel2\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = createStore(persistedReducer, applyMiddleware(thunkMiddleware));\r\nexport const persistor = persistStore(store);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n// Components\r\nimport Loading from './components/presentational/Loading';\r\nimport App from './components/containers/App';\r\n// Redux\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { store, persistor } from './redux/store.js';\r\n// Firebase\r\nimport Firebase, { FirebaseContext } from './config/firebase';\r\n\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <PersistGate loading={<Loading />} persistor={persistor}>\r\n            <FirebaseContext.Provider value={Firebase}>\r\n                <App />\r\n            </FirebaseContext.Provider>\r\n        </PersistGate>\r\n    </Provider>,\r\n    rootElement\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/Web-SEO-Online-Logo-white-transparent.7cb63763.png\";"],"sourceRoot":""}